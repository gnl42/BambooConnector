/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import me.glindholm.mylyn.bamboo.internal.rest.model.PlanKey;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestCreateDeploymentProjectRequest
 */
@JsonPropertyOrder({
  RestCreateDeploymentProjectRequest.JSON_PROPERTY_DESCRIPTION,
  RestCreateDeploymentProjectRequest.JSON_PROPERTY_NAME,
  RestCreateDeploymentProjectRequest.JSON_PROPERTY_PLAN_KEY,
  RestCreateDeploymentProjectRequest.JSON_PROPERTY_PUBLIC_ACCESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RestCreateDeploymentProjectRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PLAN_KEY = "planKey";
  private PlanKey planKey;

  public static final String JSON_PROPERTY_PUBLIC_ACCESS = "publicAccess";
  private Boolean publicAccess;

  public RestCreateDeploymentProjectRequest() { 
  }

  public RestCreateDeploymentProjectRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RestCreateDeploymentProjectRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RestCreateDeploymentProjectRequest planKey(PlanKey planKey) {
    this.planKey = planKey;
    return this;
  }

   /**
   * Get planKey
   * @return planKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PlanKey getPlanKey() {
    return planKey;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanKey(PlanKey planKey) {
    this.planKey = planKey;
  }


  public RestCreateDeploymentProjectRequest publicAccess(Boolean publicAccess) {
    this.publicAccess = publicAccess;
    return this;
  }

   /**
   * Get publicAccess
   * @return publicAccess
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublicAccess() {
    return publicAccess;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicAccess(Boolean publicAccess) {
    this.publicAccess = publicAccess;
  }


  /**
   * Return true if this RestCreateDeploymentProjectRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestCreateDeploymentProjectRequest restCreateDeploymentProjectRequest = (RestCreateDeploymentProjectRequest) o;
    return Objects.equals(this.description, restCreateDeploymentProjectRequest.description) &&
        Objects.equals(this.name, restCreateDeploymentProjectRequest.name) &&
        Objects.equals(this.planKey, restCreateDeploymentProjectRequest.planKey) &&
        Objects.equals(this.publicAccess, restCreateDeploymentProjectRequest.publicAccess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, planKey, publicAccess);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestCreateDeploymentProjectRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    planKey: ").append(toIndentedString(planKey)).append("\n");
    sb.append("    publicAccess: ").append(toIndentedString(publicAccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

