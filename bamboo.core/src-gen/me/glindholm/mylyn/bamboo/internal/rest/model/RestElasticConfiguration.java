/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestElasticInstanceManagement;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestElasticTerminationConfiguration;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestElasticConfiguration
 */
@JsonPropertyOrder({
  RestElasticConfiguration.JSON_PROPERTY_SELF,
  RestElasticConfiguration.JSON_PROPERTY_ENABLED,
  RestElasticConfiguration.JSON_PROPERTY_AWS_CREDENTIALS_TYPE,
  RestElasticConfiguration.JSON_PROPERTY_ACCESS_KEY_ID,
  RestElasticConfiguration.JSON_PROPERTY_SECRET_ACCESS_KEY,
  RestElasticConfiguration.JSON_PROPERTY_REGION,
  RestElasticConfiguration.JSON_PROPERTY_PRIVATE_KEY_FILE,
  RestElasticConfiguration.JSON_PROPERTY_CERTIFICATE_FILE,
  RestElasticConfiguration.JSON_PROPERTY_UPLOAD_AWS_IDENTIFIER,
  RestElasticConfiguration.JSON_PROPERTY_MAX_NUM_OF_ELASTIC_INSTANCES,
  RestElasticConfiguration.JSON_PROPERTY_ALLOCATE_PUBLIC_IP_TO_VPC_INSTANCES,
  RestElasticConfiguration.JSON_PROPERTY_ELASTIC_INSTANCE_MANAGEMENT,
  RestElasticConfiguration.JSON_PROPERTY_ELASTIC_TERMINATION_CONFIGURATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RestElasticConfiguration implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SELF = "self";
  private String self;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  /**
   * Gets or Sets awsCredentialsType
   */
  public enum AwsCredentialsTypeEnum {
    INSTANCE_PROFILE("INSTANCE_PROFILE"),
    
    ACCESS_KEY("ACCESS_KEY");

    private String value;

    AwsCredentialsTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AwsCredentialsTypeEnum fromValue(String value) {
      for (AwsCredentialsTypeEnum b : AwsCredentialsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AWS_CREDENTIALS_TYPE = "awsCredentialsType";
  private AwsCredentialsTypeEnum awsCredentialsType;

  public static final String JSON_PROPERTY_ACCESS_KEY_ID = "accessKeyId";
  private String accessKeyId;

  public static final String JSON_PROPERTY_SECRET_ACCESS_KEY = "secretAccessKey";
  private String secretAccessKey;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_PRIVATE_KEY_FILE = "privateKeyFile";
  private String privateKeyFile;

  public static final String JSON_PROPERTY_CERTIFICATE_FILE = "certificateFile";
  private String certificateFile;

  public static final String JSON_PROPERTY_UPLOAD_AWS_IDENTIFIER = "uploadAwsIdentifier";
  private Boolean uploadAwsIdentifier;

  public static final String JSON_PROPERTY_MAX_NUM_OF_ELASTIC_INSTANCES = "maxNumOfElasticInstances";
  private Integer maxNumOfElasticInstances;

  public static final String JSON_PROPERTY_ALLOCATE_PUBLIC_IP_TO_VPC_INSTANCES = "allocatePublicIpToVpcInstances";
  private Boolean allocatePublicIpToVpcInstances;

  public static final String JSON_PROPERTY_ELASTIC_INSTANCE_MANAGEMENT = "elasticInstanceManagement";
  private RestElasticInstanceManagement elasticInstanceManagement;

  public static final String JSON_PROPERTY_ELASTIC_TERMINATION_CONFIGURATION = "elasticTerminationConfiguration";
  private RestElasticTerminationConfiguration elasticTerminationConfiguration;

  public RestElasticConfiguration() { 
  }

  @JsonCreator
  public RestElasticConfiguration(
    @JsonProperty(JSON_PROPERTY_SELF) String self
  ) {
  this();
    this.self = self;
  }

   /**
   * Get self
   * @return self
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelf() {
    return self;
  }




  public RestElasticConfiguration enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public RestElasticConfiguration awsCredentialsType(AwsCredentialsTypeEnum awsCredentialsType) {
    this.awsCredentialsType = awsCredentialsType;
    return this;
  }

   /**
   * Get awsCredentialsType
   * @return awsCredentialsType
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "ACCESS_KEY", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AWS_CREDENTIALS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AwsCredentialsTypeEnum getAwsCredentialsType() {
    return awsCredentialsType;
  }


  @JsonProperty(JSON_PROPERTY_AWS_CREDENTIALS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAwsCredentialsType(AwsCredentialsTypeEnum awsCredentialsType) {
    this.awsCredentialsType = awsCredentialsType;
  }


  public RestElasticConfiguration accessKeyId(String accessKeyId) {
    this.accessKeyId = accessKeyId;
    return this;
  }

   /**
   * Get accessKeyId
   * @return accessKeyId
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "TEST-ACCESS-KEY-ID", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ACCESS_KEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessKeyId() {
    return accessKeyId;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_KEY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessKeyId(String accessKeyId) {
    this.accessKeyId = accessKeyId;
  }


  public RestElasticConfiguration secretAccessKey(String secretAccessKey) {
    this.secretAccessKey = secretAccessKey;
    return this;
  }

   /**
   * Get secretAccessKey
   * @return secretAccessKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SECRET_ACCESS_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecretAccessKey() {
    return secretAccessKey;
  }


  @JsonProperty(JSON_PROPERTY_SECRET_ACCESS_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecretAccessKey(String secretAccessKey) {
    this.secretAccessKey = secretAccessKey;
  }


  public RestElasticConfiguration region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "US_EAST_1", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public RestElasticConfiguration privateKeyFile(String privateKeyFile) {
    this.privateKeyFile = privateKeyFile;
    return this;
  }

   /**
   * Get privateKeyFile
   * @return privateKeyFile
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "/path/to/privateKey", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRIVATE_KEY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrivateKeyFile() {
    return privateKeyFile;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE_KEY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivateKeyFile(String privateKeyFile) {
    this.privateKeyFile = privateKeyFile;
  }


  public RestElasticConfiguration certificateFile(String certificateFile) {
    this.certificateFile = certificateFile;
    return this;
  }

   /**
   * Get certificateFile
   * @return certificateFile
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "/path/to/certificate", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCertificateFile() {
    return certificateFile;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateFile(String certificateFile) {
    this.certificateFile = certificateFile;
  }


  public RestElasticConfiguration uploadAwsIdentifier(Boolean uploadAwsIdentifier) {
    this.uploadAwsIdentifier = uploadAwsIdentifier;
    return this;
  }

   /**
   * Get uploadAwsIdentifier
   * @return uploadAwsIdentifier
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_UPLOAD_AWS_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUploadAwsIdentifier() {
    return uploadAwsIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD_AWS_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadAwsIdentifier(Boolean uploadAwsIdentifier) {
    this.uploadAwsIdentifier = uploadAwsIdentifier;
  }


  public RestElasticConfiguration maxNumOfElasticInstances(Integer maxNumOfElasticInstances) {
    this.maxNumOfElasticInstances = maxNumOfElasticInstances;
    return this;
  }

   /**
   * Get maxNumOfElasticInstances
   * @return maxNumOfElasticInstances
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "15", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MAX_NUM_OF_ELASTIC_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxNumOfElasticInstances() {
    return maxNumOfElasticInstances;
  }


  @JsonProperty(JSON_PROPERTY_MAX_NUM_OF_ELASTIC_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxNumOfElasticInstances(Integer maxNumOfElasticInstances) {
    this.maxNumOfElasticInstances = maxNumOfElasticInstances;
  }


  public RestElasticConfiguration allocatePublicIpToVpcInstances(Boolean allocatePublicIpToVpcInstances) {
    this.allocatePublicIpToVpcInstances = allocatePublicIpToVpcInstances;
    return this;
  }

   /**
   * Get allocatePublicIpToVpcInstances
   * @return allocatePublicIpToVpcInstances
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ALLOCATE_PUBLIC_IP_TO_VPC_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllocatePublicIpToVpcInstances() {
    return allocatePublicIpToVpcInstances;
  }


  @JsonProperty(JSON_PROPERTY_ALLOCATE_PUBLIC_IP_TO_VPC_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllocatePublicIpToVpcInstances(Boolean allocatePublicIpToVpcInstances) {
    this.allocatePublicIpToVpcInstances = allocatePublicIpToVpcInstances;
  }


  public RestElasticConfiguration elasticInstanceManagement(RestElasticInstanceManagement elasticInstanceManagement) {
    this.elasticInstanceManagement = elasticInstanceManagement;
    return this;
  }

   /**
   * Get elasticInstanceManagement
   * @return elasticInstanceManagement
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ELASTIC_INSTANCE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestElasticInstanceManagement getElasticInstanceManagement() {
    return elasticInstanceManagement;
  }


  @JsonProperty(JSON_PROPERTY_ELASTIC_INSTANCE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElasticInstanceManagement(RestElasticInstanceManagement elasticInstanceManagement) {
    this.elasticInstanceManagement = elasticInstanceManagement;
  }


  public RestElasticConfiguration elasticTerminationConfiguration(RestElasticTerminationConfiguration elasticTerminationConfiguration) {
    this.elasticTerminationConfiguration = elasticTerminationConfiguration;
    return this;
  }

   /**
   * Get elasticTerminationConfiguration
   * @return elasticTerminationConfiguration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ELASTIC_TERMINATION_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestElasticTerminationConfiguration getElasticTerminationConfiguration() {
    return elasticTerminationConfiguration;
  }


  @JsonProperty(JSON_PROPERTY_ELASTIC_TERMINATION_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElasticTerminationConfiguration(RestElasticTerminationConfiguration elasticTerminationConfiguration) {
    this.elasticTerminationConfiguration = elasticTerminationConfiguration;
  }


  /**
   * Return true if this RestElasticConfiguration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestElasticConfiguration restElasticConfiguration = (RestElasticConfiguration) o;
    return Objects.equals(this.self, restElasticConfiguration.self) &&
        Objects.equals(this.enabled, restElasticConfiguration.enabled) &&
        Objects.equals(this.awsCredentialsType, restElasticConfiguration.awsCredentialsType) &&
        Objects.equals(this.accessKeyId, restElasticConfiguration.accessKeyId) &&
        Objects.equals(this.secretAccessKey, restElasticConfiguration.secretAccessKey) &&
        Objects.equals(this.region, restElasticConfiguration.region) &&
        Objects.equals(this.privateKeyFile, restElasticConfiguration.privateKeyFile) &&
        Objects.equals(this.certificateFile, restElasticConfiguration.certificateFile) &&
        Objects.equals(this.uploadAwsIdentifier, restElasticConfiguration.uploadAwsIdentifier) &&
        Objects.equals(this.maxNumOfElasticInstances, restElasticConfiguration.maxNumOfElasticInstances) &&
        Objects.equals(this.allocatePublicIpToVpcInstances, restElasticConfiguration.allocatePublicIpToVpcInstances) &&
        Objects.equals(this.elasticInstanceManagement, restElasticConfiguration.elasticInstanceManagement) &&
        Objects.equals(this.elasticTerminationConfiguration, restElasticConfiguration.elasticTerminationConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, enabled, awsCredentialsType, accessKeyId, secretAccessKey, region, privateKeyFile, certificateFile, uploadAwsIdentifier, maxNumOfElasticInstances, allocatePublicIpToVpcInstances, elasticInstanceManagement, elasticTerminationConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestElasticConfiguration {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    awsCredentialsType: ").append(toIndentedString(awsCredentialsType)).append("\n");
    sb.append("    accessKeyId: ").append(toIndentedString(accessKeyId)).append("\n");
    sb.append("    secretAccessKey: ").append(toIndentedString(secretAccessKey)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    privateKeyFile: ").append(toIndentedString(privateKeyFile)).append("\n");
    sb.append("    certificateFile: ").append(toIndentedString(certificateFile)).append("\n");
    sb.append("    uploadAwsIdentifier: ").append(toIndentedString(uploadAwsIdentifier)).append("\n");
    sb.append("    maxNumOfElasticInstances: ").append(toIndentedString(maxNumOfElasticInstances)).append("\n");
    sb.append("    allocatePublicIpToVpcInstances: ").append(toIndentedString(allocatePublicIpToVpcInstances)).append("\n");
    sb.append("    elasticInstanceManagement: ").append(toIndentedString(elasticInstanceManagement)).append("\n");
    sb.append("    elasticTerminationConfiguration: ").append(toIndentedString(elasticTerminationConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

