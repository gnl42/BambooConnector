/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestGeneralConfiguration
 */
@JsonPropertyOrder({
  RestGeneralConfiguration.JSON_PROPERTY_SELF,
  RestGeneralConfiguration.JSON_PROPERTY_INSTANCE_NAME,
  RestGeneralConfiguration.JSON_PROPERTY_BASE_URL,
  RestGeneralConfiguration.JSON_PROPERTY_GRAVATAR_SERVER_URL,
  RestGeneralConfiguration.JSON_PROPERTY_BROKER_URL,
  RestGeneralConfiguration.JSON_PROPERTY_BROKER_CLIENT_URL,
  RestGeneralConfiguration.JSON_PROPERTY_DASHBOARD_DEFAULT_PAGE_SIZE,
  RestGeneralConfiguration.JSON_PROPERTY_BRANCH_DETECTION_INTERVAL_SECONDS,
  RestGeneralConfiguration.JSON_PROPERTY_ENABLE_GRAVATAR_SUPPORT,
  RestGeneralConfiguration.JSON_PROPERTY_ENABLE_GZIP_COMPRESSION,
  RestGeneralConfiguration.JSON_PROPERTY_ENABLE_RSS_POLLING,
  RestGeneralConfiguration.JSON_PROPERTY_RSS_POLLING_CRON_EXPRESSION,
  RestGeneralConfiguration.JSON_PROPERTY_QUIET_PERIOD_GLOBALLY_DISABLED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RestGeneralConfiguration implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SELF = "self";
  private String self;

  public static final String JSON_PROPERTY_INSTANCE_NAME = "instanceName";
  private String instanceName;

  public static final String JSON_PROPERTY_BASE_URL = "baseUrl";
  private String baseUrl;

  public static final String JSON_PROPERTY_GRAVATAR_SERVER_URL = "gravatarServerUrl";
  private String gravatarServerUrl;

  public static final String JSON_PROPERTY_BROKER_URL = "brokerUrl";
  private String brokerUrl;

  public static final String JSON_PROPERTY_BROKER_CLIENT_URL = "brokerClientUrl";
  private String brokerClientUrl;

  public static final String JSON_PROPERTY_DASHBOARD_DEFAULT_PAGE_SIZE = "dashboardDefaultPageSize";
  private Integer dashboardDefaultPageSize;

  public static final String JSON_PROPERTY_BRANCH_DETECTION_INTERVAL_SECONDS = "branchDetectionIntervalSeconds";
  private Integer branchDetectionIntervalSeconds;

  public static final String JSON_PROPERTY_ENABLE_GRAVATAR_SUPPORT = "enableGravatarSupport";
  private Boolean enableGravatarSupport;

  public static final String JSON_PROPERTY_ENABLE_GZIP_COMPRESSION = "enableGzipCompression";
  private Boolean enableGzipCompression;

  public static final String JSON_PROPERTY_ENABLE_RSS_POLLING = "enableRssPolling";
  private Boolean enableRssPolling;

  public static final String JSON_PROPERTY_RSS_POLLING_CRON_EXPRESSION = "rssPollingCronExpression";
  private String rssPollingCronExpression;

  public static final String JSON_PROPERTY_QUIET_PERIOD_GLOBALLY_DISABLED = "quietPeriodGloballyDisabled";
  private Boolean quietPeriodGloballyDisabled;

  public RestGeneralConfiguration() { 
  }

  @JsonCreator
  public RestGeneralConfiguration(
    @JsonProperty(JSON_PROPERTY_SELF) String self
  ) {
  this();
    this.self = self;
  }

   /**
   * Get self
   * @return self
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelf() {
    return self;
  }




  public RestGeneralConfiguration instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "CI instance", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INSTANCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceName() {
    return instanceName;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }


  public RestGeneralConfiguration baseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Get baseUrl
   * @return baseUrl
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "http://bamboo.local", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BASE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseUrl() {
    return baseUrl;
  }


  @JsonProperty(JSON_PROPERTY_BASE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }


  public RestGeneralConfiguration gravatarServerUrl(String gravatarServerUrl) {
    this.gravatarServerUrl = gravatarServerUrl;
    return this;
  }

   /**
   * Get gravatarServerUrl
   * @return gravatarServerUrl
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GRAVATAR_SERVER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGravatarServerUrl() {
    return gravatarServerUrl;
  }


  @JsonProperty(JSON_PROPERTY_GRAVATAR_SERVER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGravatarServerUrl(String gravatarServerUrl) {
    this.gravatarServerUrl = gravatarServerUrl;
  }


  public RestGeneralConfiguration brokerUrl(String brokerUrl) {
    this.brokerUrl = brokerUrl;
    return this;
  }

   /**
   * Get brokerUrl
   * @return brokerUrl
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "nio://localhost:5555", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BROKER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrokerUrl() {
    return brokerUrl;
  }


  @JsonProperty(JSON_PROPERTY_BROKER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrokerUrl(String brokerUrl) {
    this.brokerUrl = brokerUrl;
  }


  public RestGeneralConfiguration brokerClientUrl(String brokerClientUrl) {
    this.brokerClientUrl = brokerClientUrl;
    return this;
  }

   /**
   * Get brokerClientUrl
   * @return brokerClientUrl
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "tcp://bamboo.local:5555", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BROKER_CLIENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrokerClientUrl() {
    return brokerClientUrl;
  }


  @JsonProperty(JSON_PROPERTY_BROKER_CLIENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrokerClientUrl(String brokerClientUrl) {
    this.brokerClientUrl = brokerClientUrl;
  }


  public RestGeneralConfiguration dashboardDefaultPageSize(Integer dashboardDefaultPageSize) {
    this.dashboardDefaultPageSize = dashboardDefaultPageSize;
    return this;
  }

   /**
   * Get dashboardDefaultPageSize
   * @return dashboardDefaultPageSize
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "50", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DASHBOARD_DEFAULT_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDashboardDefaultPageSize() {
    return dashboardDefaultPageSize;
  }


  @JsonProperty(JSON_PROPERTY_DASHBOARD_DEFAULT_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDashboardDefaultPageSize(Integer dashboardDefaultPageSize) {
    this.dashboardDefaultPageSize = dashboardDefaultPageSize;
  }


  public RestGeneralConfiguration branchDetectionIntervalSeconds(Integer branchDetectionIntervalSeconds) {
    this.branchDetectionIntervalSeconds = branchDetectionIntervalSeconds;
    return this;
  }

   /**
   * Get branchDetectionIntervalSeconds
   * @return branchDetectionIntervalSeconds
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "100", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BRANCH_DETECTION_INTERVAL_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBranchDetectionIntervalSeconds() {
    return branchDetectionIntervalSeconds;
  }


  @JsonProperty(JSON_PROPERTY_BRANCH_DETECTION_INTERVAL_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchDetectionIntervalSeconds(Integer branchDetectionIntervalSeconds) {
    this.branchDetectionIntervalSeconds = branchDetectionIntervalSeconds;
  }


  public RestGeneralConfiguration enableGravatarSupport(Boolean enableGravatarSupport) {
    this.enableGravatarSupport = enableGravatarSupport;
    return this;
  }

   /**
   * Get enableGravatarSupport
   * @return enableGravatarSupport
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_GRAVATAR_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableGravatarSupport() {
    return enableGravatarSupport;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_GRAVATAR_SUPPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableGravatarSupport(Boolean enableGravatarSupport) {
    this.enableGravatarSupport = enableGravatarSupport;
  }


  public RestGeneralConfiguration enableGzipCompression(Boolean enableGzipCompression) {
    this.enableGzipCompression = enableGzipCompression;
    return this;
  }

   /**
   * Get enableGzipCompression
   * @return enableGzipCompression
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_GZIP_COMPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableGzipCompression() {
    return enableGzipCompression;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_GZIP_COMPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableGzipCompression(Boolean enableGzipCompression) {
    this.enableGzipCompression = enableGzipCompression;
  }


  public RestGeneralConfiguration enableRssPolling(Boolean enableRssPolling) {
    this.enableRssPolling = enableRssPolling;
    return this;
  }

   /**
   * Get enableRssPolling
   * @return enableRssPolling
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_RSS_POLLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableRssPolling() {
    return enableRssPolling;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_RSS_POLLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableRssPolling(Boolean enableRssPolling) {
    this.enableRssPolling = enableRssPolling;
  }


  public RestGeneralConfiguration rssPollingCronExpression(String rssPollingCronExpression) {
    this.rssPollingCronExpression = rssPollingCronExpression;
    return this;
  }

   /**
   * Get rssPollingCronExpression
   * @return rssPollingCronExpression
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "0 7 * ? * *", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RSS_POLLING_CRON_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRssPollingCronExpression() {
    return rssPollingCronExpression;
  }


  @JsonProperty(JSON_PROPERTY_RSS_POLLING_CRON_EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRssPollingCronExpression(String rssPollingCronExpression) {
    this.rssPollingCronExpression = rssPollingCronExpression;
  }


  public RestGeneralConfiguration quietPeriodGloballyDisabled(Boolean quietPeriodGloballyDisabled) {
    this.quietPeriodGloballyDisabled = quietPeriodGloballyDisabled;
    return this;
  }

   /**
   * Get quietPeriodGloballyDisabled
   * @return quietPeriodGloballyDisabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUIET_PERIOD_GLOBALLY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getQuietPeriodGloballyDisabled() {
    return quietPeriodGloballyDisabled;
  }


  @JsonProperty(JSON_PROPERTY_QUIET_PERIOD_GLOBALLY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuietPeriodGloballyDisabled(Boolean quietPeriodGloballyDisabled) {
    this.quietPeriodGloballyDisabled = quietPeriodGloballyDisabled;
  }


  /**
   * Return true if this RestGeneralConfiguration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestGeneralConfiguration restGeneralConfiguration = (RestGeneralConfiguration) o;
    return Objects.equals(this.self, restGeneralConfiguration.self) &&
        Objects.equals(this.instanceName, restGeneralConfiguration.instanceName) &&
        Objects.equals(this.baseUrl, restGeneralConfiguration.baseUrl) &&
        Objects.equals(this.gravatarServerUrl, restGeneralConfiguration.gravatarServerUrl) &&
        Objects.equals(this.brokerUrl, restGeneralConfiguration.brokerUrl) &&
        Objects.equals(this.brokerClientUrl, restGeneralConfiguration.brokerClientUrl) &&
        Objects.equals(this.dashboardDefaultPageSize, restGeneralConfiguration.dashboardDefaultPageSize) &&
        Objects.equals(this.branchDetectionIntervalSeconds, restGeneralConfiguration.branchDetectionIntervalSeconds) &&
        Objects.equals(this.enableGravatarSupport, restGeneralConfiguration.enableGravatarSupport) &&
        Objects.equals(this.enableGzipCompression, restGeneralConfiguration.enableGzipCompression) &&
        Objects.equals(this.enableRssPolling, restGeneralConfiguration.enableRssPolling) &&
        Objects.equals(this.rssPollingCronExpression, restGeneralConfiguration.rssPollingCronExpression) &&
        Objects.equals(this.quietPeriodGloballyDisabled, restGeneralConfiguration.quietPeriodGloballyDisabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, instanceName, baseUrl, gravatarServerUrl, brokerUrl, brokerClientUrl, dashboardDefaultPageSize, branchDetectionIntervalSeconds, enableGravatarSupport, enableGzipCompression, enableRssPolling, rssPollingCronExpression, quietPeriodGloballyDisabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestGeneralConfiguration {\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    gravatarServerUrl: ").append(toIndentedString(gravatarServerUrl)).append("\n");
    sb.append("    brokerUrl: ").append(toIndentedString(brokerUrl)).append("\n");
    sb.append("    brokerClientUrl: ").append(toIndentedString(brokerClientUrl)).append("\n");
    sb.append("    dashboardDefaultPageSize: ").append(toIndentedString(dashboardDefaultPageSize)).append("\n");
    sb.append("    branchDetectionIntervalSeconds: ").append(toIndentedString(branchDetectionIntervalSeconds)).append("\n");
    sb.append("    enableGravatarSupport: ").append(toIndentedString(enableGravatarSupport)).append("\n");
    sb.append("    enableGzipCompression: ").append(toIndentedString(enableGzipCompression)).append("\n");
    sb.append("    enableRssPolling: ").append(toIndentedString(enableRssPolling)).append("\n");
    sb.append("    rssPollingCronExpression: ").append(toIndentedString(rssPollingCronExpression)).append("\n");
    sb.append("    quietPeriodGloballyDisabled: ").append(toIndentedString(quietPeriodGloballyDisabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

