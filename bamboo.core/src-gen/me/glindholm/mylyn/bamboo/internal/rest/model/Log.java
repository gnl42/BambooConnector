/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Log
 */
@JsonPropertyOrder({
  Log.JSON_PROPERTY_DEBUG_ENABLED,
  Log.JSON_PROPERTY_WARN_ENABLED,
  Log.JSON_PROPERTY_TRACE_ENABLED,
  Log.JSON_PROPERTY_INFO_ENABLED,
  Log.JSON_PROPERTY_ERROR_ENABLED,
  Log.JSON_PROPERTY_FATAL_ENABLED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Log implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DEBUG_ENABLED = "debugEnabled";
  private Boolean debugEnabled;

  public static final String JSON_PROPERTY_WARN_ENABLED = "warnEnabled";
  private Boolean warnEnabled;

  public static final String JSON_PROPERTY_TRACE_ENABLED = "traceEnabled";
  private Boolean traceEnabled;

  public static final String JSON_PROPERTY_INFO_ENABLED = "infoEnabled";
  private Boolean infoEnabled;

  public static final String JSON_PROPERTY_ERROR_ENABLED = "errorEnabled";
  private Boolean errorEnabled;

  public static final String JSON_PROPERTY_FATAL_ENABLED = "fatalEnabled";
  private Boolean fatalEnabled;

  public Log() { 
  }

  public Log debugEnabled(Boolean debugEnabled) {
    this.debugEnabled = debugEnabled;
    return this;
  }

   /**
   * Get debugEnabled
   * @return debugEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DEBUG_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDebugEnabled() {
    return debugEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DEBUG_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebugEnabled(Boolean debugEnabled) {
    this.debugEnabled = debugEnabled;
  }


  public Log warnEnabled(Boolean warnEnabled) {
    this.warnEnabled = warnEnabled;
    return this;
  }

   /**
   * Get warnEnabled
   * @return warnEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_WARN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWarnEnabled() {
    return warnEnabled;
  }


  @JsonProperty(JSON_PROPERTY_WARN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnEnabled(Boolean warnEnabled) {
    this.warnEnabled = warnEnabled;
  }


  public Log traceEnabled(Boolean traceEnabled) {
    this.traceEnabled = traceEnabled;
    return this;
  }

   /**
   * Get traceEnabled
   * @return traceEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TRACE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTraceEnabled() {
    return traceEnabled;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTraceEnabled(Boolean traceEnabled) {
    this.traceEnabled = traceEnabled;
  }


  public Log infoEnabled(Boolean infoEnabled) {
    this.infoEnabled = infoEnabled;
    return this;
  }

   /**
   * Get infoEnabled
   * @return infoEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INFO_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInfoEnabled() {
    return infoEnabled;
  }


  @JsonProperty(JSON_PROPERTY_INFO_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInfoEnabled(Boolean infoEnabled) {
    this.infoEnabled = infoEnabled;
  }


  public Log errorEnabled(Boolean errorEnabled) {
    this.errorEnabled = errorEnabled;
    return this;
  }

   /**
   * Get errorEnabled
   * @return errorEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ERROR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getErrorEnabled() {
    return errorEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorEnabled(Boolean errorEnabled) {
    this.errorEnabled = errorEnabled;
  }


  public Log fatalEnabled(Boolean fatalEnabled) {
    this.fatalEnabled = fatalEnabled;
    return this;
  }

   /**
   * Get fatalEnabled
   * @return fatalEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FATAL_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFatalEnabled() {
    return fatalEnabled;
  }


  @JsonProperty(JSON_PROPERTY_FATAL_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFatalEnabled(Boolean fatalEnabled) {
    this.fatalEnabled = fatalEnabled;
  }


  /**
   * Return true if this Log object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Log log = (Log) o;
    return Objects.equals(this.debugEnabled, log.debugEnabled) &&
        Objects.equals(this.warnEnabled, log.warnEnabled) &&
        Objects.equals(this.traceEnabled, log.traceEnabled) &&
        Objects.equals(this.infoEnabled, log.infoEnabled) &&
        Objects.equals(this.errorEnabled, log.errorEnabled) &&
        Objects.equals(this.fatalEnabled, log.fatalEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(debugEnabled, warnEnabled, traceEnabled, infoEnabled, errorEnabled, fatalEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Log {\n");
    sb.append("    debugEnabled: ").append(toIndentedString(debugEnabled)).append("\n");
    sb.append("    warnEnabled: ").append(toIndentedString(warnEnabled)).append("\n");
    sb.append("    traceEnabled: ").append(toIndentedString(traceEnabled)).append("\n");
    sb.append("    infoEnabled: ").append(toIndentedString(infoEnabled)).append("\n");
    sb.append("    errorEnabled: ").append(toIndentedString(errorEnabled)).append("\n");
    sb.append("    fatalEnabled: ").append(toIndentedString(fatalEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

