/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ExpiryConfig
 */
@JsonPropertyOrder({
  ExpiryConfig.JSON_PROPERTY_EXPIRY_TYPE_NOTHING,
  ExpiryConfig.JSON_PROPERTY_EXPIRY_TYPE_RESULT,
  ExpiryConfig.JSON_PROPERTY_EXPIRY_TYPE_ARTIFACT,
  ExpiryConfig.JSON_PROPERTY_EXPIRY_BUILD_LOG,
  ExpiryConfig.JSON_PROPERTY_DURATION,
  ExpiryConfig.JSON_PROPERTY_PERIOD,
  ExpiryConfig.JSON_PROPERTY_LABELS_LIST,
  ExpiryConfig.JSON_PROPERTY_BUILDS_TO_KEEP,
  ExpiryConfig.JSON_PROPERTY_MAXIMUM_BUILDS_TO_KEEP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExpiryConfig implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EXPIRY_TYPE_NOTHING = "expiryTypeNothing";
  private Boolean expiryTypeNothing;

  public static final String JSON_PROPERTY_EXPIRY_TYPE_RESULT = "expiryTypeResult";
  private Boolean expiryTypeResult;

  public static final String JSON_PROPERTY_EXPIRY_TYPE_ARTIFACT = "expiryTypeArtifact";
  private Boolean expiryTypeArtifact;

  public static final String JSON_PROPERTY_EXPIRY_BUILD_LOG = "expiryBuildLog";
  private Boolean expiryBuildLog;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Integer duration;

  public static final String JSON_PROPERTY_PERIOD = "period";
  private String period;

  public static final String JSON_PROPERTY_LABELS_LIST = "labelsList";
  private String labelsList;

  public static final String JSON_PROPERTY_BUILDS_TO_KEEP = "buildsToKeep";
  private Integer buildsToKeep;

  public static final String JSON_PROPERTY_MAXIMUM_BUILDS_TO_KEEP = "maximumBuildsToKeep";
  private Integer maximumBuildsToKeep;

  public ExpiryConfig() { 
  }

  public ExpiryConfig expiryTypeNothing(Boolean expiryTypeNothing) {
    this.expiryTypeNothing = expiryTypeNothing;
    return this;
  }

   /**
   * Get expiryTypeNothing
   * @return expiryTypeNothing
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_NOTHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpiryTypeNothing() {
    return expiryTypeNothing;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_NOTHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryTypeNothing(Boolean expiryTypeNothing) {
    this.expiryTypeNothing = expiryTypeNothing;
  }


  public ExpiryConfig expiryTypeResult(Boolean expiryTypeResult) {
    this.expiryTypeResult = expiryTypeResult;
    return this;
  }

   /**
   * Get expiryTypeResult
   * @return expiryTypeResult
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpiryTypeResult() {
    return expiryTypeResult;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryTypeResult(Boolean expiryTypeResult) {
    this.expiryTypeResult = expiryTypeResult;
  }


  public ExpiryConfig expiryTypeArtifact(Boolean expiryTypeArtifact) {
    this.expiryTypeArtifact = expiryTypeArtifact;
    return this;
  }

   /**
   * Get expiryTypeArtifact
   * @return expiryTypeArtifact
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpiryTypeArtifact() {
    return expiryTypeArtifact;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_TYPE_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryTypeArtifact(Boolean expiryTypeArtifact) {
    this.expiryTypeArtifact = expiryTypeArtifact;
  }


  public ExpiryConfig expiryBuildLog(Boolean expiryBuildLog) {
    this.expiryBuildLog = expiryBuildLog;
    return this;
  }

   /**
   * Get expiryBuildLog
   * @return expiryBuildLog
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_BUILD_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpiryBuildLog() {
    return expiryBuildLog;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_BUILD_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryBuildLog(Boolean expiryBuildLog) {
    this.expiryBuildLog = expiryBuildLog;
  }


  public ExpiryConfig duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public ExpiryConfig period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriod(String period) {
    this.period = period;
  }


  public ExpiryConfig labelsList(String labelsList) {
    this.labelsList = labelsList;
    return this;
  }

   /**
   * Get labelsList
   * @return labelsList
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LABELS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabelsList() {
    return labelsList;
  }


  @JsonProperty(JSON_PROPERTY_LABELS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabelsList(String labelsList) {
    this.labelsList = labelsList;
  }


  public ExpiryConfig buildsToKeep(Integer buildsToKeep) {
    this.buildsToKeep = buildsToKeep;
    return this;
  }

   /**
   * Get buildsToKeep
   * @return buildsToKeep
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILDS_TO_KEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuildsToKeep() {
    return buildsToKeep;
  }


  @JsonProperty(JSON_PROPERTY_BUILDS_TO_KEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildsToKeep(Integer buildsToKeep) {
    this.buildsToKeep = buildsToKeep;
  }


  public ExpiryConfig maximumBuildsToKeep(Integer maximumBuildsToKeep) {
    this.maximumBuildsToKeep = maximumBuildsToKeep;
    return this;
  }

   /**
   * Get maximumBuildsToKeep
   * @return maximumBuildsToKeep
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_BUILDS_TO_KEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaximumBuildsToKeep() {
    return maximumBuildsToKeep;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_BUILDS_TO_KEEP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumBuildsToKeep(Integer maximumBuildsToKeep) {
    this.maximumBuildsToKeep = maximumBuildsToKeep;
  }


  /**
   * Return true if this ExpiryConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpiryConfig expiryConfig = (ExpiryConfig) o;
    return Objects.equals(this.expiryTypeNothing, expiryConfig.expiryTypeNothing) &&
        Objects.equals(this.expiryTypeResult, expiryConfig.expiryTypeResult) &&
        Objects.equals(this.expiryTypeArtifact, expiryConfig.expiryTypeArtifact) &&
        Objects.equals(this.expiryBuildLog, expiryConfig.expiryBuildLog) &&
        Objects.equals(this.duration, expiryConfig.duration) &&
        Objects.equals(this.period, expiryConfig.period) &&
        Objects.equals(this.labelsList, expiryConfig.labelsList) &&
        Objects.equals(this.buildsToKeep, expiryConfig.buildsToKeep) &&
        Objects.equals(this.maximumBuildsToKeep, expiryConfig.maximumBuildsToKeep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiryTypeNothing, expiryTypeResult, expiryTypeArtifact, expiryBuildLog, duration, period, labelsList, buildsToKeep, maximumBuildsToKeep);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpiryConfig {\n");
    sb.append("    expiryTypeNothing: ").append(toIndentedString(expiryTypeNothing)).append("\n");
    sb.append("    expiryTypeResult: ").append(toIndentedString(expiryTypeResult)).append("\n");
    sb.append("    expiryTypeArtifact: ").append(toIndentedString(expiryTypeArtifact)).append("\n");
    sb.append("    expiryBuildLog: ").append(toIndentedString(expiryBuildLog)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    labelsList: ").append(toIndentedString(labelsList)).append("\n");
    sb.append("    buildsToKeep: ").append(toIndentedString(buildsToKeep)).append("\n");
    sb.append("    maximumBuildsToKeep: ").append(toIndentedString(maximumBuildsToKeep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

