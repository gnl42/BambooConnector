/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import me.glindholm.mylyn.bamboo.internal.rest.model.ChainStageResult;
import me.glindholm.mylyn.bamboo.internal.rest.model.ImmutableResultsSummary;
import me.glindholm.mylyn.bamboo.internal.rest.model.Link;
import me.glindholm.mylyn.bamboo.internal.rest.model.PlanResultKey;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestBuildArtifactList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestBuildLabelList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestCommentList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestJiraIssueList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestProgress;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestStageResultList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestVariableList;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestVcsRevisionList;
import me.glindholm.mylyn.bamboo.internal.rest.model.ResultChangeList;
import me.glindholm.mylyn.bamboo.internal.rest.model.ResultMetadataList;
import me.glindholm.mylyn.bamboo.internal.rest.model.TestResults;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Result
 */
@JsonPropertyOrder({
  Result.JSON_PROPERTY_EXPAND,
  Result.JSON_PROPERTY_LINK,
  Result.JSON_PROPERTY_PARENT_LINK,
  Result.JSON_PROPERTY_PLAN_NAME,
  Result.JSON_PROPERTY_PROJECT_NAME,
  Result.JSON_PROPERTY_STAGE,
  Result.JSON_PROPERTY_PLAN_RESULT_KEY,
  Result.JSON_PROPERTY_BUILD_STATE,
  Result.JSON_PROPERTY_LIFE_CYCLE_STATE,
  Result.JSON_PROPERTY_BUILD_NUMBER,
  Result.JSON_PROPERTY_ID,
  Result.JSON_PROPERTY_BUILD_STARTED_TIME,
  Result.JSON_PROPERTY_PRETTY_BUILD_STARTED_TIME,
  Result.JSON_PROPERTY_BUILD_COMPLETED_TIME,
  Result.JSON_PROPERTY_PRETTY_BUILD_COMPLETED_TIME,
  Result.JSON_PROPERTY_BUILD_DURATION_IN_SECONDS,
  Result.JSON_PROPERTY_BUILD_DURATION,
  Result.JSON_PROPERTY_BUILD_DURATION_DESCRIPTION,
  Result.JSON_PROPERTY_BUILD_RELATIVE_TIME,
  Result.JSON_PROPERTY_QUEUE_STARTED_TIME,
  Result.JSON_PROPERTY_PRETTY_QUEUE_STARTED_TIME,
  Result.JSON_PROPERTY_QUEUE_TIME_IN_SECONDS,
  Result.JSON_PROPERTY_QUEUE_DURATION,
  Result.JSON_PROPERTY_PRETTY_QUEUE_DURATION,
  Result.JSON_PROPERTY_VCS_UPDATE_STARTED_TIME,
  Result.JSON_PROPERTY_PRETTY_VCS_UPDATE_STARTED_TIME,
  Result.JSON_PROPERTY_VCS_UPDATE_IN_SECONDS,
  Result.JSON_PROPERTY_VCS_UPDATE_DURATION,
  Result.JSON_PROPERTY_PRETTY_VCS_UPDATE_DURATION,
  Result.JSON_PROPERTY_VCS_REVISION_KEY,
  Result.JSON_PROPERTY_VCS_REVISIONS,
  Result.JSON_PROPERTY_BUILD_TEST_SUMMARY,
  Result.JSON_PROPERTY_SUCCESSFUL_TEST_COUNT,
  Result.JSON_PROPERTY_FAILED_TEST_COUNT,
  Result.JSON_PROPERTY_QUARANTINED_TEST_COUNT,
  Result.JSON_PROPERTY_SKIPPED_TEST_COUNT,
  Result.JSON_PROPERTY_RESTART_COUNT,
  Result.JSON_PROPERTY_CONTINUABLE,
  Result.JSON_PROPERTY_ONCE_OFF,
  Result.JSON_PROPERTY_RESTARTABLE,
  Result.JSON_PROPERTY_NOT_RUN_YET,
  Result.JSON_PROPERTY_FINISHED,
  Result.JSON_PROPERTY_SUCCESSFUL,
  Result.JSON_PROPERTY_BUILD_REASON,
  Result.JSON_PROPERTY_REASON_SUMMARY,
  Result.JSON_PROPERTY_SPECS_RESULT,
  Result.JSON_PROPERTY_HAS_EXECUTABLE_AGENTS,
  Result.JSON_PROPERTY_ARTIFACTS,
  Result.JSON_PROPERTY_COMMENTS,
  Result.JSON_PROPERTY_LABELS,
  Result.JSON_PROPERTY_JIRA_ISSUES,
  Result.JSON_PROPERTY_VARIABLES,
  Result.JSON_PROPERTY_LOG_FILES,
  Result.JSON_PROPERTY_CHANGES,
  Result.JSON_PROPERTY_TEST_RESULTS,
  Result.JSON_PROPERTY_METADATA,
  Result.JSON_PROPERTY_PROGRESS,
  Result.JSON_PROPERTY_PARENT,
  Result.JSON_PROPERTY_KEY,
  Result.JSON_PROPERTY_STATE,
  Result.JSON_PROPERTY_NUMBER,
  Result.JSON_PROPERTY_STAGES,
  Result.JSON_PROPERTY_STAGE_RESULT,
  Result.JSON_PROPERTY_BUILD_SUMMARY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Result implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EXPAND = "expand";
  private String expand;

  public static final String JSON_PROPERTY_LINK = "link";
  private Link link;

  public static final String JSON_PROPERTY_PARENT_LINK = "parentLink";
  private Link parentLink;

  public static final String JSON_PROPERTY_PLAN_NAME = "planName";
  private String planName;

  public static final String JSON_PROPERTY_PROJECT_NAME = "projectName";
  private String projectName;

  public static final String JSON_PROPERTY_STAGE = "stage";
  private String stage;

  public static final String JSON_PROPERTY_PLAN_RESULT_KEY = "planResultKey";
  private PlanResultKey planResultKey;

  public static final String JSON_PROPERTY_BUILD_STATE = "buildState";
  private String buildState;

  public static final String JSON_PROPERTY_LIFE_CYCLE_STATE = "lifeCycleState";
  private String lifeCycleState;

  public static final String JSON_PROPERTY_BUILD_NUMBER = "buildNumber";
  private Integer buildNumber;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_BUILD_STARTED_TIME = "buildStartedTime";
  private Date buildStartedTime;

  public static final String JSON_PROPERTY_PRETTY_BUILD_STARTED_TIME = "prettyBuildStartedTime";
  private String prettyBuildStartedTime;

  public static final String JSON_PROPERTY_BUILD_COMPLETED_TIME = "buildCompletedTime";
  private Date buildCompletedTime;

  public static final String JSON_PROPERTY_PRETTY_BUILD_COMPLETED_TIME = "prettyBuildCompletedTime";
  private String prettyBuildCompletedTime;

  public static final String JSON_PROPERTY_BUILD_DURATION_IN_SECONDS = "buildDurationInSeconds";
  private Long buildDurationInSeconds;

  public static final String JSON_PROPERTY_BUILD_DURATION = "buildDuration";
  private Long buildDuration;

  public static final String JSON_PROPERTY_BUILD_DURATION_DESCRIPTION = "buildDurationDescription";
  private String buildDurationDescription;

  public static final String JSON_PROPERTY_BUILD_RELATIVE_TIME = "buildRelativeTime";
  private String buildRelativeTime;

  public static final String JSON_PROPERTY_QUEUE_STARTED_TIME = "queueStartedTime";
  private Date queueStartedTime;

  public static final String JSON_PROPERTY_PRETTY_QUEUE_STARTED_TIME = "prettyQueueStartedTime";
  private String prettyQueueStartedTime;

  public static final String JSON_PROPERTY_QUEUE_TIME_IN_SECONDS = "queueTimeInSeconds";
  private Long queueTimeInSeconds;

  public static final String JSON_PROPERTY_QUEUE_DURATION = "queueDuration";
  private Long queueDuration;

  public static final String JSON_PROPERTY_PRETTY_QUEUE_DURATION = "prettyQueueDuration";
  private String prettyQueueDuration;

  public static final String JSON_PROPERTY_VCS_UPDATE_STARTED_TIME = "vcsUpdateStartedTime";
  private Date vcsUpdateStartedTime;

  public static final String JSON_PROPERTY_PRETTY_VCS_UPDATE_STARTED_TIME = "prettyVcsUpdateStartedTime";
  private String prettyVcsUpdateStartedTime;

  public static final String JSON_PROPERTY_VCS_UPDATE_IN_SECONDS = "vcsUpdateInSeconds";
  private Long vcsUpdateInSeconds;

  public static final String JSON_PROPERTY_VCS_UPDATE_DURATION = "vcsUpdateDuration";
  private Long vcsUpdateDuration;

  public static final String JSON_PROPERTY_PRETTY_VCS_UPDATE_DURATION = "prettyVcsUpdateDuration";
  private String prettyVcsUpdateDuration;

  public static final String JSON_PROPERTY_VCS_REVISION_KEY = "vcsRevisionKey";
  private String vcsRevisionKey;

  public static final String JSON_PROPERTY_VCS_REVISIONS = "vcsRevisions";
  private RestVcsRevisionList vcsRevisions;

  public static final String JSON_PROPERTY_BUILD_TEST_SUMMARY = "buildTestSummary";
  private String buildTestSummary;

  public static final String JSON_PROPERTY_SUCCESSFUL_TEST_COUNT = "successfulTestCount";
  private Integer successfulTestCount;

  public static final String JSON_PROPERTY_FAILED_TEST_COUNT = "failedTestCount";
  private Integer failedTestCount;

  public static final String JSON_PROPERTY_QUARANTINED_TEST_COUNT = "quarantinedTestCount";
  private Integer quarantinedTestCount;

  public static final String JSON_PROPERTY_SKIPPED_TEST_COUNT = "skippedTestCount";
  private Integer skippedTestCount;

  public static final String JSON_PROPERTY_RESTART_COUNT = "restartCount";
  private Integer restartCount;

  public static final String JSON_PROPERTY_CONTINUABLE = "continuable";
  private Boolean continuable;

  public static final String JSON_PROPERTY_ONCE_OFF = "onceOff";
  private Boolean onceOff;

  public static final String JSON_PROPERTY_RESTARTABLE = "restartable";
  private Boolean restartable;

  public static final String JSON_PROPERTY_NOT_RUN_YET = "notRunYet";
  private Boolean notRunYet;

  public static final String JSON_PROPERTY_FINISHED = "finished";
  private Boolean finished;

  public static final String JSON_PROPERTY_SUCCESSFUL = "successful";
  private Boolean successful;

  public static final String JSON_PROPERTY_BUILD_REASON = "buildReason";
  private String buildReason;

  public static final String JSON_PROPERTY_REASON_SUMMARY = "reasonSummary";
  private String reasonSummary;

  public static final String JSON_PROPERTY_SPECS_RESULT = "specsResult";
  private Boolean specsResult;

  public static final String JSON_PROPERTY_HAS_EXECUTABLE_AGENTS = "hasExecutableAgents";
  private Boolean hasExecutableAgents;

  public static final String JSON_PROPERTY_ARTIFACTS = "artifacts";
  private RestBuildArtifactList artifacts;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private RestCommentList comments;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private RestBuildLabelList labels;

  public static final String JSON_PROPERTY_JIRA_ISSUES = "jiraIssues";
  private RestJiraIssueList jiraIssues;

  public static final String JSON_PROPERTY_VARIABLES = "variables";
  private RestVariableList variables;

  public static final String JSON_PROPERTY_LOG_FILES = "logFiles";
  private List<String> logFiles;

  public static final String JSON_PROPERTY_CHANGES = "changes";
  private ResultChangeList changes;

  public static final String JSON_PROPERTY_TEST_RESULTS = "testResults";
  private TestResults testResults;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ResultMetadataList metadata;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private RestProgress progress;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private Link parent;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_NUMBER = "number";
  private Long number;

  public static final String JSON_PROPERTY_STAGES = "stages";
  private RestStageResultList stages;

  public static final String JSON_PROPERTY_STAGE_RESULT = "stageResult";
  private ChainStageResult stageResult;

  public static final String JSON_PROPERTY_BUILD_SUMMARY = "buildSummary";
  private ImmutableResultsSummary buildSummary;

  public Result() { 
  }

  public Result expand(String expand) {
    this.expand = expand;
    return this;
  }

   /**
   * Get expand
   * @return expand
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpand() {
    return expand;
  }


  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpand(String expand) {
    this.expand = expand;
  }


  public Result link(Link link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(Link link) {
    this.link = link;
  }


  public Result parentLink(Link parentLink) {
    this.parentLink = parentLink;
    return this;
  }

   /**
   * Get parentLink
   * @return parentLink
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PARENT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getParentLink() {
    return parentLink;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentLink(Link parentLink) {
    this.parentLink = parentLink;
  }


  public Result planName(String planName) {
    this.planName = planName;
    return this;
  }

   /**
   * Get planName
   * @return planName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanName() {
    return planName;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanName(String planName) {
    this.planName = planName;
  }


  public Result projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProjectName() {
    return projectName;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public Result stage(String stage) {
    this.stage = stage;
    return this;
  }

   /**
   * Get stage
   * @return stage
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStage() {
    return stage;
  }


  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStage(String stage) {
    this.stage = stage;
  }


  public Result planResultKey(PlanResultKey planResultKey) {
    this.planResultKey = planResultKey;
    return this;
  }

   /**
   * Get planResultKey
   * @return planResultKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_RESULT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PlanResultKey getPlanResultKey() {
    return planResultKey;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_RESULT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanResultKey(PlanResultKey planResultKey) {
    this.planResultKey = planResultKey;
  }


  public Result buildState(String buildState) {
    this.buildState = buildState;
    return this;
  }

   /**
   * Get buildState
   * @return buildState
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildState() {
    return buildState;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildState(String buildState) {
    this.buildState = buildState;
  }


  public Result lifeCycleState(String lifeCycleState) {
    this.lifeCycleState = lifeCycleState;
    return this;
  }

   /**
   * Get lifeCycleState
   * @return lifeCycleState
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLifeCycleState() {
    return lifeCycleState;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycleState(String lifeCycleState) {
    this.lifeCycleState = lifeCycleState;
  }


  public Result buildNumber(Integer buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

   /**
   * Get buildNumber
   * @return buildNumber
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuildNumber() {
    return buildNumber;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildNumber(Integer buildNumber) {
    this.buildNumber = buildNumber;
  }


  public Result id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public Result buildStartedTime(Date buildStartedTime) {
    this.buildStartedTime = buildStartedTime;
    return this;
  }

   /**
   * Get buildStartedTime
   * @return buildStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getBuildStartedTime() {
    return buildStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildStartedTime(Date buildStartedTime) {
    this.buildStartedTime = buildStartedTime;
  }


  public Result prettyBuildStartedTime(String prettyBuildStartedTime) {
    this.prettyBuildStartedTime = prettyBuildStartedTime;
    return this;
  }

   /**
   * Get prettyBuildStartedTime
   * @return prettyBuildStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyBuildStartedTime() {
    return prettyBuildStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyBuildStartedTime(String prettyBuildStartedTime) {
    this.prettyBuildStartedTime = prettyBuildStartedTime;
  }


  public Result buildCompletedTime(Date buildCompletedTime) {
    this.buildCompletedTime = buildCompletedTime;
    return this;
  }

   /**
   * Get buildCompletedTime
   * @return buildCompletedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_COMPLETED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getBuildCompletedTime() {
    return buildCompletedTime;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_COMPLETED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildCompletedTime(Date buildCompletedTime) {
    this.buildCompletedTime = buildCompletedTime;
  }


  public Result prettyBuildCompletedTime(String prettyBuildCompletedTime) {
    this.prettyBuildCompletedTime = prettyBuildCompletedTime;
    return this;
  }

   /**
   * Get prettyBuildCompletedTime
   * @return prettyBuildCompletedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_COMPLETED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyBuildCompletedTime() {
    return prettyBuildCompletedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_COMPLETED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyBuildCompletedTime(String prettyBuildCompletedTime) {
    this.prettyBuildCompletedTime = prettyBuildCompletedTime;
  }


  public Result buildDurationInSeconds(Long buildDurationInSeconds) {
    this.buildDurationInSeconds = buildDurationInSeconds;
    return this;
  }

   /**
   * Get buildDurationInSeconds
   * @return buildDurationInSeconds
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_DURATION_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBuildDurationInSeconds() {
    return buildDurationInSeconds;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_DURATION_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildDurationInSeconds(Long buildDurationInSeconds) {
    this.buildDurationInSeconds = buildDurationInSeconds;
  }


  public Result buildDuration(Long buildDuration) {
    this.buildDuration = buildDuration;
    return this;
  }

   /**
   * Get buildDuration
   * @return buildDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBuildDuration() {
    return buildDuration;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildDuration(Long buildDuration) {
    this.buildDuration = buildDuration;
  }


  public Result buildDurationDescription(String buildDurationDescription) {
    this.buildDurationDescription = buildDurationDescription;
    return this;
  }

   /**
   * Get buildDurationDescription
   * @return buildDurationDescription
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_DURATION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildDurationDescription() {
    return buildDurationDescription;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_DURATION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildDurationDescription(String buildDurationDescription) {
    this.buildDurationDescription = buildDurationDescription;
  }


  public Result buildRelativeTime(String buildRelativeTime) {
    this.buildRelativeTime = buildRelativeTime;
    return this;
  }

   /**
   * Get buildRelativeTime
   * @return buildRelativeTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_RELATIVE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildRelativeTime() {
    return buildRelativeTime;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_RELATIVE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildRelativeTime(String buildRelativeTime) {
    this.buildRelativeTime = buildRelativeTime;
  }


  public Result queueStartedTime(Date queueStartedTime) {
    this.queueStartedTime = queueStartedTime;
    return this;
  }

   /**
   * Get queueStartedTime
   * @return queueStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUEUE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getQueueStartedTime() {
    return queueStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueueStartedTime(Date queueStartedTime) {
    this.queueStartedTime = queueStartedTime;
  }


  public Result prettyQueueStartedTime(String prettyQueueStartedTime) {
    this.prettyQueueStartedTime = prettyQueueStartedTime;
    return this;
  }

   /**
   * Get prettyQueueStartedTime
   * @return prettyQueueStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyQueueStartedTime() {
    return prettyQueueStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyQueueStartedTime(String prettyQueueStartedTime) {
    this.prettyQueueStartedTime = prettyQueueStartedTime;
  }


  public Result queueTimeInSeconds(Long queueTimeInSeconds) {
    this.queueTimeInSeconds = queueTimeInSeconds;
    return this;
  }

   /**
   * Get queueTimeInSeconds
   * @return queueTimeInSeconds
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUEUE_TIME_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQueueTimeInSeconds() {
    return queueTimeInSeconds;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE_TIME_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueueTimeInSeconds(Long queueTimeInSeconds) {
    this.queueTimeInSeconds = queueTimeInSeconds;
  }


  public Result queueDuration(Long queueDuration) {
    this.queueDuration = queueDuration;
    return this;
  }

   /**
   * Get queueDuration
   * @return queueDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUEUE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQueueDuration() {
    return queueDuration;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueueDuration(Long queueDuration) {
    this.queueDuration = queueDuration;
  }


  public Result prettyQueueDuration(String prettyQueueDuration) {
    this.prettyQueueDuration = prettyQueueDuration;
    return this;
  }

   /**
   * Get prettyQueueDuration
   * @return prettyQueueDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyQueueDuration() {
    return prettyQueueDuration;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyQueueDuration(String prettyQueueDuration) {
    this.prettyQueueDuration = prettyQueueDuration;
  }


  public Result vcsUpdateStartedTime(Date vcsUpdateStartedTime) {
    this.vcsUpdateStartedTime = vcsUpdateStartedTime;
    return this;
  }

   /**
   * Get vcsUpdateStartedTime
   * @return vcsUpdateStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getVcsUpdateStartedTime() {
    return vcsUpdateStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcsUpdateStartedTime(Date vcsUpdateStartedTime) {
    this.vcsUpdateStartedTime = vcsUpdateStartedTime;
  }


  public Result prettyVcsUpdateStartedTime(String prettyVcsUpdateStartedTime) {
    this.prettyVcsUpdateStartedTime = prettyVcsUpdateStartedTime;
    return this;
  }

   /**
   * Get prettyVcsUpdateStartedTime
   * @return prettyVcsUpdateStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_VCS_UPDATE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyVcsUpdateStartedTime() {
    return prettyVcsUpdateStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_VCS_UPDATE_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyVcsUpdateStartedTime(String prettyVcsUpdateStartedTime) {
    this.prettyVcsUpdateStartedTime = prettyVcsUpdateStartedTime;
  }


  public Result vcsUpdateInSeconds(Long vcsUpdateInSeconds) {
    this.vcsUpdateInSeconds = vcsUpdateInSeconds;
    return this;
  }

   /**
   * Get vcsUpdateInSeconds
   * @return vcsUpdateInSeconds
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVcsUpdateInSeconds() {
    return vcsUpdateInSeconds;
  }


  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcsUpdateInSeconds(Long vcsUpdateInSeconds) {
    this.vcsUpdateInSeconds = vcsUpdateInSeconds;
  }


  public Result vcsUpdateDuration(Long vcsUpdateDuration) {
    this.vcsUpdateDuration = vcsUpdateDuration;
    return this;
  }

   /**
   * Get vcsUpdateDuration
   * @return vcsUpdateDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getVcsUpdateDuration() {
    return vcsUpdateDuration;
  }


  @JsonProperty(JSON_PROPERTY_VCS_UPDATE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcsUpdateDuration(Long vcsUpdateDuration) {
    this.vcsUpdateDuration = vcsUpdateDuration;
  }


  public Result prettyVcsUpdateDuration(String prettyVcsUpdateDuration) {
    this.prettyVcsUpdateDuration = prettyVcsUpdateDuration;
    return this;
  }

   /**
   * Get prettyVcsUpdateDuration
   * @return prettyVcsUpdateDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_VCS_UPDATE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyVcsUpdateDuration() {
    return prettyVcsUpdateDuration;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_VCS_UPDATE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyVcsUpdateDuration(String prettyVcsUpdateDuration) {
    this.prettyVcsUpdateDuration = prettyVcsUpdateDuration;
  }


  public Result vcsRevisionKey(String vcsRevisionKey) {
    this.vcsRevisionKey = vcsRevisionKey;
    return this;
  }

   /**
   * Get vcsRevisionKey
   * @return vcsRevisionKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VCS_REVISION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVcsRevisionKey() {
    return vcsRevisionKey;
  }


  @JsonProperty(JSON_PROPERTY_VCS_REVISION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcsRevisionKey(String vcsRevisionKey) {
    this.vcsRevisionKey = vcsRevisionKey;
  }


  public Result vcsRevisions(RestVcsRevisionList vcsRevisions) {
    this.vcsRevisions = vcsRevisions;
    return this;
  }

   /**
   * Get vcsRevisions
   * @return vcsRevisions
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VCS_REVISIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestVcsRevisionList getVcsRevisions() {
    return vcsRevisions;
  }


  @JsonProperty(JSON_PROPERTY_VCS_REVISIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVcsRevisions(RestVcsRevisionList vcsRevisions) {
    this.vcsRevisions = vcsRevisions;
  }


  public Result buildTestSummary(String buildTestSummary) {
    this.buildTestSummary = buildTestSummary;
    return this;
  }

   /**
   * Get buildTestSummary
   * @return buildTestSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_TEST_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildTestSummary() {
    return buildTestSummary;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_TEST_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildTestSummary(String buildTestSummary) {
    this.buildTestSummary = buildTestSummary;
  }


  public Result successfulTestCount(Integer successfulTestCount) {
    this.successfulTestCount = successfulTestCount;
    return this;
  }

   /**
   * Get successfulTestCount
   * @return successfulTestCount
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUCCESSFUL_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSuccessfulTestCount() {
    return successfulTestCount;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSFUL_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessfulTestCount(Integer successfulTestCount) {
    this.successfulTestCount = successfulTestCount;
  }


  public Result failedTestCount(Integer failedTestCount) {
    this.failedTestCount = failedTestCount;
    return this;
  }

   /**
   * Get failedTestCount
   * @return failedTestCount
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FAILED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFailedTestCount() {
    return failedTestCount;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailedTestCount(Integer failedTestCount) {
    this.failedTestCount = failedTestCount;
  }


  public Result quarantinedTestCount(Integer quarantinedTestCount) {
    this.quarantinedTestCount = quarantinedTestCount;
    return this;
  }

   /**
   * Get quarantinedTestCount
   * @return quarantinedTestCount
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUARANTINED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuarantinedTestCount() {
    return quarantinedTestCount;
  }


  @JsonProperty(JSON_PROPERTY_QUARANTINED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuarantinedTestCount(Integer quarantinedTestCount) {
    this.quarantinedTestCount = quarantinedTestCount;
  }


  public Result skippedTestCount(Integer skippedTestCount) {
    this.skippedTestCount = skippedTestCount;
    return this;
  }

   /**
   * Get skippedTestCount
   * @return skippedTestCount
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SKIPPED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSkippedTestCount() {
    return skippedTestCount;
  }


  @JsonProperty(JSON_PROPERTY_SKIPPED_TEST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkippedTestCount(Integer skippedTestCount) {
    this.skippedTestCount = skippedTestCount;
  }


  public Result restartCount(Integer restartCount) {
    this.restartCount = restartCount;
    return this;
  }

   /**
   * Get restartCount
   * @return restartCount
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RESTART_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRestartCount() {
    return restartCount;
  }


  @JsonProperty(JSON_PROPERTY_RESTART_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestartCount(Integer restartCount) {
    this.restartCount = restartCount;
  }


  public Result continuable(Boolean continuable) {
    this.continuable = continuable;
    return this;
  }

   /**
   * Get continuable
   * @return continuable
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTINUABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getContinuable() {
    return continuable;
  }


  @JsonProperty(JSON_PROPERTY_CONTINUABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContinuable(Boolean continuable) {
    this.continuable = continuable;
  }


  public Result onceOff(Boolean onceOff) {
    this.onceOff = onceOff;
    return this;
  }

   /**
   * Get onceOff
   * @return onceOff
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ONCE_OFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOnceOff() {
    return onceOff;
  }


  @JsonProperty(JSON_PROPERTY_ONCE_OFF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnceOff(Boolean onceOff) {
    this.onceOff = onceOff;
  }


  public Result restartable(Boolean restartable) {
    this.restartable = restartable;
    return this;
  }

   /**
   * Get restartable
   * @return restartable
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RESTARTABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRestartable() {
    return restartable;
  }


  @JsonProperty(JSON_PROPERTY_RESTARTABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestartable(Boolean restartable) {
    this.restartable = restartable;
  }


  public Result notRunYet(Boolean notRunYet) {
    this.notRunYet = notRunYet;
    return this;
  }

   /**
   * Get notRunYet
   * @return notRunYet
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NOT_RUN_YET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNotRunYet() {
    return notRunYet;
  }


  @JsonProperty(JSON_PROPERTY_NOT_RUN_YET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotRunYet(Boolean notRunYet) {
    this.notRunYet = notRunYet;
  }


  public Result finished(Boolean finished) {
    this.finished = finished;
    return this;
  }

   /**
   * Get finished
   * @return finished
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FINISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFinished() {
    return finished;
  }


  @JsonProperty(JSON_PROPERTY_FINISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinished(Boolean finished) {
    this.finished = finished;
  }


  public Result successful(Boolean successful) {
    this.successful = successful;
    return this;
  }

   /**
   * Get successful
   * @return successful
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuccessful() {
    return successful;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }


  public Result buildReason(String buildReason) {
    this.buildReason = buildReason;
    return this;
  }

   /**
   * Get buildReason
   * @return buildReason
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildReason() {
    return buildReason;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildReason(String buildReason) {
    this.buildReason = buildReason;
  }


  public Result reasonSummary(String reasonSummary) {
    this.reasonSummary = reasonSummary;
    return this;
  }

   /**
   * Get reasonSummary
   * @return reasonSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REASON_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReasonSummary() {
    return reasonSummary;
  }


  @JsonProperty(JSON_PROPERTY_REASON_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonSummary(String reasonSummary) {
    this.reasonSummary = reasonSummary;
  }


  public Result specsResult(Boolean specsResult) {
    this.specsResult = specsResult;
    return this;
  }

   /**
   * Get specsResult
   * @return specsResult
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SPECS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSpecsResult() {
    return specsResult;
  }


  @JsonProperty(JSON_PROPERTY_SPECS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecsResult(Boolean specsResult) {
    this.specsResult = specsResult;
  }


  public Result hasExecutableAgents(Boolean hasExecutableAgents) {
    this.hasExecutableAgents = hasExecutableAgents;
    return this;
  }

   /**
   * Get hasExecutableAgents
   * @return hasExecutableAgents
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_HAS_EXECUTABLE_AGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasExecutableAgents() {
    return hasExecutableAgents;
  }


  @JsonProperty(JSON_PROPERTY_HAS_EXECUTABLE_AGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasExecutableAgents(Boolean hasExecutableAgents) {
    this.hasExecutableAgents = hasExecutableAgents;
  }


  public Result artifacts(RestBuildArtifactList artifacts) {
    this.artifacts = artifacts;
    return this;
  }

   /**
   * Get artifacts
   * @return artifacts
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ARTIFACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestBuildArtifactList getArtifacts() {
    return artifacts;
  }


  @JsonProperty(JSON_PROPERTY_ARTIFACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArtifacts(RestBuildArtifactList artifacts) {
    this.artifacts = artifacts;
  }


  public Result comments(RestCommentList comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestCommentList getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(RestCommentList comments) {
    this.comments = comments;
  }


  public Result labels(RestBuildLabelList labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestBuildLabelList getLabels() {
    return labels;
  }


  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabels(RestBuildLabelList labels) {
    this.labels = labels;
  }


  public Result jiraIssues(RestJiraIssueList jiraIssues) {
    this.jiraIssues = jiraIssues;
    return this;
  }

   /**
   * Get jiraIssues
   * @return jiraIssues
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_JIRA_ISSUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestJiraIssueList getJiraIssues() {
    return jiraIssues;
  }


  @JsonProperty(JSON_PROPERTY_JIRA_ISSUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJiraIssues(RestJiraIssueList jiraIssues) {
    this.jiraIssues = jiraIssues;
  }


  public Result variables(RestVariableList variables) {
    this.variables = variables;
    return this;
  }

   /**
   * Get variables
   * @return variables
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestVariableList getVariables() {
    return variables;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariables(RestVariableList variables) {
    this.variables = variables;
  }


  public Result logFiles(List<String> logFiles) {
    this.logFiles = logFiles;
    return this;
  }

  public Result addLogFilesItem(String logFilesItem) {
    if (this.logFiles == null) {
      this.logFiles = new ArrayList<>();
    }
    this.logFiles.add(logFilesItem);
    return this;
  }

   /**
   * Get logFiles
   * @return logFiles
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LOG_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getLogFiles() {
    return logFiles;
  }


  @JsonProperty(JSON_PROPERTY_LOG_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogFiles(List<String> logFiles) {
    this.logFiles = logFiles;
  }


  public Result changes(ResultChangeList changes) {
    this.changes = changes;
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultChangeList getChanges() {
    return changes;
  }


  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChanges(ResultChangeList changes) {
    this.changes = changes;
  }


  public Result testResults(TestResults testResults) {
    this.testResults = testResults;
    return this;
  }

   /**
   * Get testResults
   * @return testResults
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TestResults getTestResults() {
    return testResults;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestResults(TestResults testResults) {
    this.testResults = testResults;
  }


  public Result metadata(ResultMetadataList metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultMetadataList getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ResultMetadataList metadata) {
    this.metadata = metadata;
  }


  public Result progress(RestProgress progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestProgress getProgress() {
    return progress;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgress(RestProgress progress) {
    this.progress = progress;
  }


  public Result parent(Link parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(Link parent) {
    this.parent = parent;
  }


  public Result key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public Result state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  public Result number(Long number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumber(Long number) {
    this.number = number;
  }


  public Result stages(RestStageResultList stages) {
    this.stages = stages;
    return this;
  }

   /**
   * Get stages
   * @return stages
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestStageResultList getStages() {
    return stages;
  }


  @JsonProperty(JSON_PROPERTY_STAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStages(RestStageResultList stages) {
    this.stages = stages;
  }


  public Result stageResult(ChainStageResult stageResult) {
    this.stageResult = stageResult;
    return this;
  }

   /**
   * Get stageResult
   * @return stageResult
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STAGE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChainStageResult getStageResult() {
    return stageResult;
  }


  @JsonProperty(JSON_PROPERTY_STAGE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStageResult(ChainStageResult stageResult) {
    this.stageResult = stageResult;
  }


  public Result buildSummary(ImmutableResultsSummary buildSummary) {
    this.buildSummary = buildSummary;
    return this;
  }

   /**
   * Get buildSummary
   * @return buildSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ImmutableResultsSummary getBuildSummary() {
    return buildSummary;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildSummary(ImmutableResultsSummary buildSummary) {
    this.buildSummary = buildSummary;
  }


  /**
   * Return true if this Result object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result result = (Result) o;
    return Objects.equals(this.expand, result.expand) &&
        Objects.equals(this.link, result.link) &&
        Objects.equals(this.parentLink, result.parentLink) &&
        Objects.equals(this.planName, result.planName) &&
        Objects.equals(this.projectName, result.projectName) &&
        Objects.equals(this.stage, result.stage) &&
        Objects.equals(this.planResultKey, result.planResultKey) &&
        Objects.equals(this.buildState, result.buildState) &&
        Objects.equals(this.lifeCycleState, result.lifeCycleState) &&
        Objects.equals(this.buildNumber, result.buildNumber) &&
        Objects.equals(this.id, result.id) &&
        Objects.equals(this.buildStartedTime, result.buildStartedTime) &&
        Objects.equals(this.prettyBuildStartedTime, result.prettyBuildStartedTime) &&
        Objects.equals(this.buildCompletedTime, result.buildCompletedTime) &&
        Objects.equals(this.prettyBuildCompletedTime, result.prettyBuildCompletedTime) &&
        Objects.equals(this.buildDurationInSeconds, result.buildDurationInSeconds) &&
        Objects.equals(this.buildDuration, result.buildDuration) &&
        Objects.equals(this.buildDurationDescription, result.buildDurationDescription) &&
        Objects.equals(this.buildRelativeTime, result.buildRelativeTime) &&
        Objects.equals(this.queueStartedTime, result.queueStartedTime) &&
        Objects.equals(this.prettyQueueStartedTime, result.prettyQueueStartedTime) &&
        Objects.equals(this.queueTimeInSeconds, result.queueTimeInSeconds) &&
        Objects.equals(this.queueDuration, result.queueDuration) &&
        Objects.equals(this.prettyQueueDuration, result.prettyQueueDuration) &&
        Objects.equals(this.vcsUpdateStartedTime, result.vcsUpdateStartedTime) &&
        Objects.equals(this.prettyVcsUpdateStartedTime, result.prettyVcsUpdateStartedTime) &&
        Objects.equals(this.vcsUpdateInSeconds, result.vcsUpdateInSeconds) &&
        Objects.equals(this.vcsUpdateDuration, result.vcsUpdateDuration) &&
        Objects.equals(this.prettyVcsUpdateDuration, result.prettyVcsUpdateDuration) &&
        Objects.equals(this.vcsRevisionKey, result.vcsRevisionKey) &&
        Objects.equals(this.vcsRevisions, result.vcsRevisions) &&
        Objects.equals(this.buildTestSummary, result.buildTestSummary) &&
        Objects.equals(this.successfulTestCount, result.successfulTestCount) &&
        Objects.equals(this.failedTestCount, result.failedTestCount) &&
        Objects.equals(this.quarantinedTestCount, result.quarantinedTestCount) &&
        Objects.equals(this.skippedTestCount, result.skippedTestCount) &&
        Objects.equals(this.restartCount, result.restartCount) &&
        Objects.equals(this.continuable, result.continuable) &&
        Objects.equals(this.onceOff, result.onceOff) &&
        Objects.equals(this.restartable, result.restartable) &&
        Objects.equals(this.notRunYet, result.notRunYet) &&
        Objects.equals(this.finished, result.finished) &&
        Objects.equals(this.successful, result.successful) &&
        Objects.equals(this.buildReason, result.buildReason) &&
        Objects.equals(this.reasonSummary, result.reasonSummary) &&
        Objects.equals(this.specsResult, result.specsResult) &&
        Objects.equals(this.hasExecutableAgents, result.hasExecutableAgents) &&
        Objects.equals(this.artifacts, result.artifacts) &&
        Objects.equals(this.comments, result.comments) &&
        Objects.equals(this.labels, result.labels) &&
        Objects.equals(this.jiraIssues, result.jiraIssues) &&
        Objects.equals(this.variables, result.variables) &&
        Objects.equals(this.logFiles, result.logFiles) &&
        Objects.equals(this.changes, result.changes) &&
        Objects.equals(this.testResults, result.testResults) &&
        Objects.equals(this.metadata, result.metadata) &&
        Objects.equals(this.progress, result.progress) &&
        Objects.equals(this.parent, result.parent) &&
        Objects.equals(this.key, result.key) &&
        Objects.equals(this.state, result.state) &&
        Objects.equals(this.number, result.number) &&
        Objects.equals(this.stages, result.stages) &&
        Objects.equals(this.stageResult, result.stageResult) &&
        Objects.equals(this.buildSummary, result.buildSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expand, link, parentLink, planName, projectName, stage, planResultKey, buildState, lifeCycleState, buildNumber, id, buildStartedTime, prettyBuildStartedTime, buildCompletedTime, prettyBuildCompletedTime, buildDurationInSeconds, buildDuration, buildDurationDescription, buildRelativeTime, queueStartedTime, prettyQueueStartedTime, queueTimeInSeconds, queueDuration, prettyQueueDuration, vcsUpdateStartedTime, prettyVcsUpdateStartedTime, vcsUpdateInSeconds, vcsUpdateDuration, prettyVcsUpdateDuration, vcsRevisionKey, vcsRevisions, buildTestSummary, successfulTestCount, failedTestCount, quarantinedTestCount, skippedTestCount, restartCount, continuable, onceOff, restartable, notRunYet, finished, successful, buildReason, reasonSummary, specsResult, hasExecutableAgents, artifacts, comments, labels, jiraIssues, variables, logFiles, changes, testResults, metadata, progress, parent, key, state, number, stages, stageResult, buildSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    parentLink: ").append(toIndentedString(parentLink)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    planResultKey: ").append(toIndentedString(planResultKey)).append("\n");
    sb.append("    buildState: ").append(toIndentedString(buildState)).append("\n");
    sb.append("    lifeCycleState: ").append(toIndentedString(lifeCycleState)).append("\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    buildStartedTime: ").append(toIndentedString(buildStartedTime)).append("\n");
    sb.append("    prettyBuildStartedTime: ").append(toIndentedString(prettyBuildStartedTime)).append("\n");
    sb.append("    buildCompletedTime: ").append(toIndentedString(buildCompletedTime)).append("\n");
    sb.append("    prettyBuildCompletedTime: ").append(toIndentedString(prettyBuildCompletedTime)).append("\n");
    sb.append("    buildDurationInSeconds: ").append(toIndentedString(buildDurationInSeconds)).append("\n");
    sb.append("    buildDuration: ").append(toIndentedString(buildDuration)).append("\n");
    sb.append("    buildDurationDescription: ").append(toIndentedString(buildDurationDescription)).append("\n");
    sb.append("    buildRelativeTime: ").append(toIndentedString(buildRelativeTime)).append("\n");
    sb.append("    queueStartedTime: ").append(toIndentedString(queueStartedTime)).append("\n");
    sb.append("    prettyQueueStartedTime: ").append(toIndentedString(prettyQueueStartedTime)).append("\n");
    sb.append("    queueTimeInSeconds: ").append(toIndentedString(queueTimeInSeconds)).append("\n");
    sb.append("    queueDuration: ").append(toIndentedString(queueDuration)).append("\n");
    sb.append("    prettyQueueDuration: ").append(toIndentedString(prettyQueueDuration)).append("\n");
    sb.append("    vcsUpdateStartedTime: ").append(toIndentedString(vcsUpdateStartedTime)).append("\n");
    sb.append("    prettyVcsUpdateStartedTime: ").append(toIndentedString(prettyVcsUpdateStartedTime)).append("\n");
    sb.append("    vcsUpdateInSeconds: ").append(toIndentedString(vcsUpdateInSeconds)).append("\n");
    sb.append("    vcsUpdateDuration: ").append(toIndentedString(vcsUpdateDuration)).append("\n");
    sb.append("    prettyVcsUpdateDuration: ").append(toIndentedString(prettyVcsUpdateDuration)).append("\n");
    sb.append("    vcsRevisionKey: ").append(toIndentedString(vcsRevisionKey)).append("\n");
    sb.append("    vcsRevisions: ").append(toIndentedString(vcsRevisions)).append("\n");
    sb.append("    buildTestSummary: ").append(toIndentedString(buildTestSummary)).append("\n");
    sb.append("    successfulTestCount: ").append(toIndentedString(successfulTestCount)).append("\n");
    sb.append("    failedTestCount: ").append(toIndentedString(failedTestCount)).append("\n");
    sb.append("    quarantinedTestCount: ").append(toIndentedString(quarantinedTestCount)).append("\n");
    sb.append("    skippedTestCount: ").append(toIndentedString(skippedTestCount)).append("\n");
    sb.append("    restartCount: ").append(toIndentedString(restartCount)).append("\n");
    sb.append("    continuable: ").append(toIndentedString(continuable)).append("\n");
    sb.append("    onceOff: ").append(toIndentedString(onceOff)).append("\n");
    sb.append("    restartable: ").append(toIndentedString(restartable)).append("\n");
    sb.append("    notRunYet: ").append(toIndentedString(notRunYet)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("    buildReason: ").append(toIndentedString(buildReason)).append("\n");
    sb.append("    reasonSummary: ").append(toIndentedString(reasonSummary)).append("\n");
    sb.append("    specsResult: ").append(toIndentedString(specsResult)).append("\n");
    sb.append("    hasExecutableAgents: ").append(toIndentedString(hasExecutableAgents)).append("\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    jiraIssues: ").append(toIndentedString(jiraIssues)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    logFiles: ").append(toIndentedString(logFiles)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    stageResult: ").append(toIndentedString(stageResult)).append("\n");
    sb.append("    buildSummary: ").append(toIndentedString(buildSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

