/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestProjectIdentifier;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestPlanIdentifier
 */
@JsonPropertyOrder({
  RestPlanIdentifier.JSON_PROPERTY_ID,
  RestPlanIdentifier.JSON_PROPERTY_PROJECT,
  RestPlanIdentifier.JSON_PROPERTY_PLAN_TYPE,
  RestPlanIdentifier.JSON_PROPERTY_PLAN_KEY,
  RestPlanIdentifier.JSON_PROPERTY_BUILD_KEY,
  RestPlanIdentifier.JSON_PROPERTY_NAME,
  RestPlanIdentifier.JSON_PROPERTY_DESCRIPTION,
  RestPlanIdentifier.JSON_PROPERTY_BUILD_NAME,
  RestPlanIdentifier.JSON_PROPERTY_SUSPENDED_FROM_BUILDING,
  RestPlanIdentifier.JSON_PROPERTY_MASTER_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RestPlanIdentifier implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private RestProjectIdentifier project;

  public static final String JSON_PROPERTY_PLAN_TYPE = "planType";
  private String planType;

  public static final String JSON_PROPERTY_PLAN_KEY = "planKey";
  private String planKey;

  public static final String JSON_PROPERTY_BUILD_KEY = "buildKey";
  private String buildKey;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_BUILD_NAME = "buildName";
  private String buildName;

  public static final String JSON_PROPERTY_SUSPENDED_FROM_BUILDING = "suspendedFromBuilding";
  private Boolean suspendedFromBuilding;

  public static final String JSON_PROPERTY_MASTER_ID = "masterId";
  private Long masterId;

  public RestPlanIdentifier() { 
  }

  public RestPlanIdentifier id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public RestPlanIdentifier project(RestProjectIdentifier project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestProjectIdentifier getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(RestProjectIdentifier project) {
    this.project = project;
  }


  public RestPlanIdentifier planType(String planType) {
    this.planType = planType;
    return this;
  }

   /**
   * Get planType
   * @return planType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanType() {
    return planType;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanType(String planType) {
    this.planType = planType;
  }


  public RestPlanIdentifier planKey(String planKey) {
    this.planKey = planKey;
    return this;
  }

   /**
   * Get planKey
   * @return planKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanKey() {
    return planKey;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanKey(String planKey) {
    this.planKey = planKey;
  }


  public RestPlanIdentifier buildKey(String buildKey) {
    this.buildKey = buildKey;
    return this;
  }

   /**
   * Get buildKey
   * @return buildKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildKey() {
    return buildKey;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildKey(String buildKey) {
    this.buildKey = buildKey;
  }


  public RestPlanIdentifier name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RestPlanIdentifier description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RestPlanIdentifier buildName(String buildName) {
    this.buildName = buildName;
    return this;
  }

   /**
   * Get buildName
   * @return buildName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildName() {
    return buildName;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildName(String buildName) {
    this.buildName = buildName;
  }


  public RestPlanIdentifier suspendedFromBuilding(Boolean suspendedFromBuilding) {
    this.suspendedFromBuilding = suspendedFromBuilding;
    return this;
  }

   /**
   * Get suspendedFromBuilding
   * @return suspendedFromBuilding
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUSPENDED_FROM_BUILDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuspendedFromBuilding() {
    return suspendedFromBuilding;
  }


  @JsonProperty(JSON_PROPERTY_SUSPENDED_FROM_BUILDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspendedFromBuilding(Boolean suspendedFromBuilding) {
    this.suspendedFromBuilding = suspendedFromBuilding;
  }


  public RestPlanIdentifier masterId(Long masterId) {
    this.masterId = masterId;
    return this;
  }

   /**
   * Get masterId
   * @return masterId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MASTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMasterId() {
    return masterId;
  }


  @JsonProperty(JSON_PROPERTY_MASTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMasterId(Long masterId) {
    this.masterId = masterId;
  }


  /**
   * Return true if this RestPlanIdentifier object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestPlanIdentifier restPlanIdentifier = (RestPlanIdentifier) o;
    return Objects.equals(this.id, restPlanIdentifier.id) &&
        Objects.equals(this.project, restPlanIdentifier.project) &&
        Objects.equals(this.planType, restPlanIdentifier.planType) &&
        Objects.equals(this.planKey, restPlanIdentifier.planKey) &&
        Objects.equals(this.buildKey, restPlanIdentifier.buildKey) &&
        Objects.equals(this.name, restPlanIdentifier.name) &&
        Objects.equals(this.description, restPlanIdentifier.description) &&
        Objects.equals(this.buildName, restPlanIdentifier.buildName) &&
        Objects.equals(this.suspendedFromBuilding, restPlanIdentifier.suspendedFromBuilding) &&
        Objects.equals(this.masterId, restPlanIdentifier.masterId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, project, planType, planKey, buildKey, name, description, buildName, suspendedFromBuilding, masterId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestPlanIdentifier {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    planType: ").append(toIndentedString(planType)).append("\n");
    sb.append("    planKey: ").append(toIndentedString(planKey)).append("\n");
    sb.append("    buildKey: ").append(toIndentedString(buildKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    buildName: ").append(toIndentedString(buildName)).append("\n");
    sb.append("    suspendedFromBuilding: ").append(toIndentedString(suspendedFromBuilding)).append("\n");
    sb.append("    masterId: ").append(toIndentedString(masterId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

