/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import me.glindholm.mylyn.bamboo.internal.rest.model.RestVariableDefinitionContext;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VersionVariables
 */
@JsonPropertyOrder({
  VersionVariables.JSON_PROPERTY_INCREMENTABLE_VARIABLES,
  VersionVariables.JSON_PROPERTY_BUILD_VARIABLES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VersionVariables implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INCREMENTABLE_VARIABLES = "incrementableVariables";
  private List<RestVariableDefinitionContext> incrementableVariables;

  public static final String JSON_PROPERTY_BUILD_VARIABLES = "buildVariables";
  private List<RestVariableDefinitionContext> buildVariables;

  public VersionVariables() { 
  }

  public VersionVariables incrementableVariables(List<RestVariableDefinitionContext> incrementableVariables) {
    this.incrementableVariables = incrementableVariables;
    return this;
  }

  public VersionVariables addIncrementableVariablesItem(RestVariableDefinitionContext incrementableVariablesItem) {
    if (this.incrementableVariables == null) {
      this.incrementableVariables = new ArrayList<>();
    }
    this.incrementableVariables.add(incrementableVariablesItem);
    return this;
  }

   /**
   * Get incrementableVariables
   * @return incrementableVariables
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INCREMENTABLE_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RestVariableDefinitionContext> getIncrementableVariables() {
    return incrementableVariables;
  }


  @JsonProperty(JSON_PROPERTY_INCREMENTABLE_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncrementableVariables(List<RestVariableDefinitionContext> incrementableVariables) {
    this.incrementableVariables = incrementableVariables;
  }


  public VersionVariables buildVariables(List<RestVariableDefinitionContext> buildVariables) {
    this.buildVariables = buildVariables;
    return this;
  }

  public VersionVariables addBuildVariablesItem(RestVariableDefinitionContext buildVariablesItem) {
    if (this.buildVariables == null) {
      this.buildVariables = new ArrayList<>();
    }
    this.buildVariables.add(buildVariablesItem);
    return this;
  }

   /**
   * Get buildVariables
   * @return buildVariables
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RestVariableDefinitionContext> getBuildVariables() {
    return buildVariables;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildVariables(List<RestVariableDefinitionContext> buildVariables) {
    this.buildVariables = buildVariables;
  }


  /**
   * Return true if this VersionVariables object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionVariables versionVariables = (VersionVariables) o;
    return Objects.equals(this.incrementableVariables, versionVariables.incrementableVariables) &&
        Objects.equals(this.buildVariables, versionVariables.buildVariables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incrementableVariables, buildVariables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionVariables {\n");
    sb.append("    incrementableVariables: ").append(toIndentedString(incrementableVariables)).append("\n");
    sb.append("    buildVariables: ").append(toIndentedString(buildVariables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

