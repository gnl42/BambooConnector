/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import me.glindholm.mylyn.bamboo.internal.rest.model.JiraIssueDetails;
import me.glindholm.mylyn.bamboo.internal.rest.model.ResultsSummary;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * LinkedJiraIssue
 */
@JsonPropertyOrder({
  LinkedJiraIssue.JSON_PROPERTY_RESULTS_SUMMARY,
  LinkedJiraIssue.JSON_PROPERTY_ISSUE_TYPE,
  LinkedJiraIssue.JSON_PROPERTY_ISSUE_KEY,
  LinkedJiraIssue.JSON_PROPERTY_JIRA_ISSUE_DETAILS,
  LinkedJiraIssue.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LinkedJiraIssue implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_RESULTS_SUMMARY = "resultsSummary";
  private ResultsSummary resultsSummary;

  /**
   * Gets or Sets issueType
   */
  public enum IssueTypeEnum {
    RELATES("BUILD_RELATES"),
    
    FIXES("BUILD_FIXES"),
    
    CAUSES("BUILD_CAUSES");

    private String value;

    IssueTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IssueTypeEnum fromValue(String value) {
      for (IssueTypeEnum b : IssueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ISSUE_TYPE = "issueType";
  private IssueTypeEnum issueType;

  public static final String JSON_PROPERTY_ISSUE_KEY = "issueKey";
  private String issueKey;

  public static final String JSON_PROPERTY_JIRA_ISSUE_DETAILS = "jiraIssueDetails";
  private JiraIssueDetails jiraIssueDetails;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public LinkedJiraIssue() { 
  }

  public LinkedJiraIssue resultsSummary(ResultsSummary resultsSummary) {
    this.resultsSummary = resultsSummary;
    return this;
  }

   /**
   * Get resultsSummary
   * @return resultsSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultsSummary getResultsSummary() {
    return resultsSummary;
  }


  @JsonProperty(JSON_PROPERTY_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultsSummary(ResultsSummary resultsSummary) {
    this.resultsSummary = resultsSummary;
  }


  public LinkedJiraIssue issueType(IssueTypeEnum issueType) {
    this.issueType = issueType;
    return this;
  }

   /**
   * Get issueType
   * @return issueType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ISSUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IssueTypeEnum getIssueType() {
    return issueType;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueType(IssueTypeEnum issueType) {
    this.issueType = issueType;
  }


  public LinkedJiraIssue issueKey(String issueKey) {
    this.issueKey = issueKey;
    return this;
  }

   /**
   * Get issueKey
   * @return issueKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ISSUE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssueKey() {
    return issueKey;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueKey(String issueKey) {
    this.issueKey = issueKey;
  }


  public LinkedJiraIssue jiraIssueDetails(JiraIssueDetails jiraIssueDetails) {
    this.jiraIssueDetails = jiraIssueDetails;
    return this;
  }

   /**
   * Get jiraIssueDetails
   * @return jiraIssueDetails
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_JIRA_ISSUE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JiraIssueDetails getJiraIssueDetails() {
    return jiraIssueDetails;
  }


  @JsonProperty(JSON_PROPERTY_JIRA_ISSUE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJiraIssueDetails(JiraIssueDetails jiraIssueDetails) {
    this.jiraIssueDetails = jiraIssueDetails;
  }


  public LinkedJiraIssue id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this LinkedJiraIssue object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkedJiraIssue linkedJiraIssue = (LinkedJiraIssue) o;
    return Objects.equals(this.resultsSummary, linkedJiraIssue.resultsSummary) &&
        Objects.equals(this.issueType, linkedJiraIssue.issueType) &&
        Objects.equals(this.issueKey, linkedJiraIssue.issueKey) &&
        Objects.equals(this.jiraIssueDetails, linkedJiraIssue.jiraIssueDetails) &&
        Objects.equals(this.id, linkedJiraIssue.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resultsSummary, issueType, issueKey, jiraIssueDetails, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkedJiraIssue {\n");
    sb.append("    resultsSummary: ").append(toIndentedString(resultsSummary)).append("\n");
    sb.append("    issueType: ").append(toIndentedString(issueType)).append("\n");
    sb.append("    issueKey: ").append(toIndentedString(issueKey)).append("\n");
    sb.append("    jiraIssueDetails: ").append(toIndentedString(jiraIssueDetails)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

