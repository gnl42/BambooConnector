/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.util.Date;
import me.glindholm.mylyn.bamboo.internal.rest.model.BuildAgent;
import me.glindholm.mylyn.bamboo.internal.rest.model.DeploymentResultKey;
import me.glindholm.mylyn.bamboo.internal.rest.model.DeploymentVersion;
import me.glindholm.mylyn.bamboo.internal.rest.model.Environment;
import me.glindholm.mylyn.bamboo.internal.rest.model.Operations;
import me.glindholm.mylyn.bamboo.internal.rest.model.TriggerReason;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DeploymentResult
 */
@JsonPropertyOrder({
  DeploymentResult.JSON_PROPERTY_AGENT,
  DeploymentResult.JSON_PROPERTY_AGENT_ID,
  DeploymentResult.JSON_PROPERTY_AGENT_TYPE,
  DeploymentResult.JSON_PROPERTY_CUSTOM_DATA,
  DeploymentResult.JSON_PROPERTY_DEPLOYMENT_STATE,
  DeploymentResult.JSON_PROPERTY_DEPLOYMENT_VERSION,
  DeploymentResult.JSON_PROPERTY_DEPLOYMENT_VERSION_NAME,
  DeploymentResult.JSON_PROPERTY_ENVIRONMENT,
  DeploymentResult.JSON_PROPERTY_ENVIRONMENT_ID,
  DeploymentResult.JSON_PROPERTY_EXECUTED_DATE,
  DeploymentResult.JSON_PROPERTY_FINISHED_DATE,
  DeploymentResult.JSON_PROPERTY_ID,
  DeploymentResult.JSON_PROPERTY_KEY,
  DeploymentResult.JSON_PROPERTY_LIFE_CYCLE_STATE,
  DeploymentResult.JSON_PROPERTY_OPERATIONS,
  DeploymentResult.JSON_PROPERTY_QUEUED_DATE,
  DeploymentResult.JSON_PROPERTY_REASON_SUMMARY,
  DeploymentResult.JSON_PROPERTY_STARTED_DATE,
  DeploymentResult.JSON_PROPERTY_TRIGGER_REASON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DeploymentResult implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AGENT = "agent";
  private BuildAgent agent;

  public static final String JSON_PROPERTY_AGENT_ID = "agentId";
  private Long agentId;

  /**
   * Gets or Sets agentType
   */
  public enum AgentTypeEnum {
    LOCAL("LOCAL"),
    
    REMOTE("REMOTE"),
    
    ELASTIC("ELASTIC"),
    
    EPHEMERAL("EPHEMERAL");

    private String value;

    AgentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AgentTypeEnum fromValue(String value) {
      for (AgentTypeEnum b : AgentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AGENT_TYPE = "agentType";
  private AgentTypeEnum agentType;

  public static final String JSON_PROPERTY_CUSTOM_DATA = "customData";
  private Object customData;

  /**
   * Gets or Sets deploymentState
   */
  public enum DeploymentStateEnum {
    UNKNOWN("Unknown"),
    
    SUCCESSFUL("Successful"),
    
    FAILED("Failed");

    private String value;

    DeploymentStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeploymentStateEnum fromValue(String value) {
      for (DeploymentStateEnum b : DeploymentStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEPLOYMENT_STATE = "deploymentState";
  private DeploymentStateEnum deploymentState;

  public static final String JSON_PROPERTY_DEPLOYMENT_VERSION = "deploymentVersion";
  private DeploymentVersion deploymentVersion;

  public static final String JSON_PROPERTY_DEPLOYMENT_VERSION_NAME = "deploymentVersionName";
  private String deploymentVersionName;

  public static final String JSON_PROPERTY_ENVIRONMENT = "environment";
  private Environment environment;

  public static final String JSON_PROPERTY_ENVIRONMENT_ID = "environmentId";
  private Long environmentId;

  public static final String JSON_PROPERTY_EXECUTED_DATE = "executedDate";
  private Date executedDate;

  public static final String JSON_PROPERTY_FINISHED_DATE = "finishedDate";
  private Date finishedDate;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_KEY = "key";
  private DeploymentResultKey key;

  /**
   * Gets or Sets lifeCycleState
   */
  public enum LifeCycleStateEnum {
    PENDING("Pending"),
    
    QUEUED("Queued"),
    
    INPROGRESS("InProgress"),
    
    FINISHED("Finished"),
    
    NOTBUILT("NotBuilt");

    private String value;

    LifeCycleStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LifeCycleStateEnum fromValue(String value) {
      for (LifeCycleStateEnum b : LifeCycleStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LIFE_CYCLE_STATE = "lifeCycleState";
  private LifeCycleStateEnum lifeCycleState;

  public static final String JSON_PROPERTY_OPERATIONS = "operations";
  private Operations operations;

  public static final String JSON_PROPERTY_QUEUED_DATE = "queuedDate";
  private Date queuedDate;

  public static final String JSON_PROPERTY_REASON_SUMMARY = "reasonSummary";
  private String reasonSummary;

  public static final String JSON_PROPERTY_STARTED_DATE = "startedDate";
  private Date startedDate;

  public static final String JSON_PROPERTY_TRIGGER_REASON = "triggerReason";
  private TriggerReason triggerReason;

  public DeploymentResult() { 
  }

  public DeploymentResult agent(BuildAgent agent) {
    this.agent = agent;
    return this;
  }

   /**
   * Get agent
   * @return agent
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildAgent getAgent() {
    return agent;
  }


  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgent(BuildAgent agent) {
    this.agent = agent;
  }


  public DeploymentResult agentId(Long agentId) {
    this.agentId = agentId;
    return this;
  }

   /**
   * Get agentId
   * @return agentId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AGENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAgentId() {
    return agentId;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgentId(Long agentId) {
    this.agentId = agentId;
  }


  public DeploymentResult agentType(AgentTypeEnum agentType) {
    this.agentType = agentType;
    return this;
  }

   /**
   * Get agentType
   * @return agentType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AGENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AgentTypeEnum getAgentType() {
    return agentType;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgentType(AgentTypeEnum agentType) {
    this.agentType = agentType;
  }


  public DeploymentResult customData(Object customData) {
    this.customData = customData;
    return this;
  }

   /**
   * Get customData
   * @return customData
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomData() {
    return customData;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomData(Object customData) {
    this.customData = customData;
  }


  public DeploymentResult deploymentState(DeploymentStateEnum deploymentState) {
    this.deploymentState = deploymentState;
    return this;
  }

   /**
   * Get deploymentState
   * @return deploymentState
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeploymentStateEnum getDeploymentState() {
    return deploymentState;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentState(DeploymentStateEnum deploymentState) {
    this.deploymentState = deploymentState;
  }


  public DeploymentResult deploymentVersion(DeploymentVersion deploymentVersion) {
    this.deploymentVersion = deploymentVersion;
    return this;
  }

   /**
   * Get deploymentVersion
   * @return deploymentVersion
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeploymentVersion getDeploymentVersion() {
    return deploymentVersion;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentVersion(DeploymentVersion deploymentVersion) {
    this.deploymentVersion = deploymentVersion;
  }


  public DeploymentResult deploymentVersionName(String deploymentVersionName) {
    this.deploymentVersionName = deploymentVersionName;
    return this;
  }

   /**
   * Get deploymentVersionName
   * @return deploymentVersionName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentVersionName() {
    return deploymentVersionName;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_VERSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentVersionName(String deploymentVersionName) {
    this.deploymentVersionName = deploymentVersionName;
  }


  public DeploymentResult environment(Environment environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Environment getEnvironment() {
    return environment;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironment(Environment environment) {
    this.environment = environment;
  }


  public DeploymentResult environmentId(Long environmentId) {
    this.environmentId = environmentId;
    return this;
  }

   /**
   * Get environmentId
   * @return environmentId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEnvironmentId() {
    return environmentId;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentId(Long environmentId) {
    this.environmentId = environmentId;
  }


  public DeploymentResult executedDate(Date executedDate) {
    this.executedDate = executedDate;
    return this;
  }

   /**
   * Get executedDate
   * @return executedDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXECUTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getExecutedDate() {
    return executedDate;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutedDate(Date executedDate) {
    this.executedDate = executedDate;
  }


  public DeploymentResult finishedDate(Date finishedDate) {
    this.finishedDate = finishedDate;
    return this;
  }

   /**
   * Get finishedDate
   * @return finishedDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FINISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getFinishedDate() {
    return finishedDate;
  }


  @JsonProperty(JSON_PROPERTY_FINISHED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinishedDate(Date finishedDate) {
    this.finishedDate = finishedDate;
  }


  public DeploymentResult id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public DeploymentResult key(DeploymentResultKey key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeploymentResultKey getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(DeploymentResultKey key) {
    this.key = key;
  }


  public DeploymentResult lifeCycleState(LifeCycleStateEnum lifeCycleState) {
    this.lifeCycleState = lifeCycleState;
    return this;
  }

   /**
   * Get lifeCycleState
   * @return lifeCycleState
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LifeCycleStateEnum getLifeCycleState() {
    return lifeCycleState;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycleState(LifeCycleStateEnum lifeCycleState) {
    this.lifeCycleState = lifeCycleState;
  }


  public DeploymentResult operations(Operations operations) {
    this.operations = operations;
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Operations getOperations() {
    return operations;
  }


  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperations(Operations operations) {
    this.operations = operations;
  }


  public DeploymentResult queuedDate(Date queuedDate) {
    this.queuedDate = queuedDate;
    return this;
  }

   /**
   * Get queuedDate
   * @return queuedDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUEUED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getQueuedDate() {
    return queuedDate;
  }


  @JsonProperty(JSON_PROPERTY_QUEUED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueuedDate(Date queuedDate) {
    this.queuedDate = queuedDate;
  }


  public DeploymentResult reasonSummary(String reasonSummary) {
    this.reasonSummary = reasonSummary;
    return this;
  }

   /**
   * Get reasonSummary
   * @return reasonSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REASON_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReasonSummary() {
    return reasonSummary;
  }


  @JsonProperty(JSON_PROPERTY_REASON_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonSummary(String reasonSummary) {
    this.reasonSummary = reasonSummary;
  }


  public DeploymentResult startedDate(Date startedDate) {
    this.startedDate = startedDate;
    return this;
  }

   /**
   * Get startedDate
   * @return startedDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getStartedDate() {
    return startedDate;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedDate(Date startedDate) {
    this.startedDate = startedDate;
  }


  public DeploymentResult triggerReason(TriggerReason triggerReason) {
    this.triggerReason = triggerReason;
    return this;
  }

   /**
   * Get triggerReason
   * @return triggerReason
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TRIGGER_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TriggerReason getTriggerReason() {
    return triggerReason;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerReason(TriggerReason triggerReason) {
    this.triggerReason = triggerReason;
  }


  /**
   * Return true if this DeploymentResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentResult deploymentResult = (DeploymentResult) o;
    return Objects.equals(this.agent, deploymentResult.agent) &&
        Objects.equals(this.agentId, deploymentResult.agentId) &&
        Objects.equals(this.agentType, deploymentResult.agentType) &&
        Objects.equals(this.customData, deploymentResult.customData) &&
        Objects.equals(this.deploymentState, deploymentResult.deploymentState) &&
        Objects.equals(this.deploymentVersion, deploymentResult.deploymentVersion) &&
        Objects.equals(this.deploymentVersionName, deploymentResult.deploymentVersionName) &&
        Objects.equals(this.environment, deploymentResult.environment) &&
        Objects.equals(this.environmentId, deploymentResult.environmentId) &&
        Objects.equals(this.executedDate, deploymentResult.executedDate) &&
        Objects.equals(this.finishedDate, deploymentResult.finishedDate) &&
        Objects.equals(this.id, deploymentResult.id) &&
        Objects.equals(this.key, deploymentResult.key) &&
        Objects.equals(this.lifeCycleState, deploymentResult.lifeCycleState) &&
        Objects.equals(this.operations, deploymentResult.operations) &&
        Objects.equals(this.queuedDate, deploymentResult.queuedDate) &&
        Objects.equals(this.reasonSummary, deploymentResult.reasonSummary) &&
        Objects.equals(this.startedDate, deploymentResult.startedDate) &&
        Objects.equals(this.triggerReason, deploymentResult.triggerReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agent, agentId, agentType, customData, deploymentState, deploymentVersion, deploymentVersionName, environment, environmentId, executedDate, finishedDate, id, key, lifeCycleState, operations, queuedDate, reasonSummary, startedDate, triggerReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentResult {\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    agentType: ").append(toIndentedString(agentType)).append("\n");
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    deploymentState: ").append(toIndentedString(deploymentState)).append("\n");
    sb.append("    deploymentVersion: ").append(toIndentedString(deploymentVersion)).append("\n");
    sb.append("    deploymentVersionName: ").append(toIndentedString(deploymentVersionName)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    executedDate: ").append(toIndentedString(executedDate)).append("\n");
    sb.append("    finishedDate: ").append(toIndentedString(finishedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    lifeCycleState: ").append(toIndentedString(lifeCycleState)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    queuedDate: ").append(toIndentedString(queuedDate)).append("\n");
    sb.append("    reasonSummary: ").append(toIndentedString(reasonSummary)).append("\n");
    sb.append("    startedDate: ").append(toIndentedString(startedDate)).append("\n");
    sb.append("    triggerReason: ").append(toIndentedString(triggerReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

