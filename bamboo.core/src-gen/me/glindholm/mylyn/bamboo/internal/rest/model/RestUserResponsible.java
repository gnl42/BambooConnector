/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestUserResponsible
 */
@JsonPropertyOrder({
  RestUserResponsible.JSON_PROPERTY_ASSIGNED_USER,
  RestUserResponsible.JSON_PROPERTY_ASSIGNED_BY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RestUserResponsible implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ASSIGNED_USER = "assignedUser";
  private String assignedUser;

  public static final String JSON_PROPERTY_ASSIGNED_BY = "assignedBy";
  private String assignedBy;

  public RestUserResponsible() { 
  }

  public RestUserResponsible assignedUser(String assignedUser) {
    this.assignedUser = assignedUser;
    return this;
  }

   /**
   * Get assignedUser
   * @return assignedUser
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedUser() {
    return assignedUser;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssignedUser(String assignedUser) {
    this.assignedUser = assignedUser;
  }


  public RestUserResponsible assignedBy(String assignedBy) {
    this.assignedBy = assignedBy;
    return this;
  }

   /**
   * Get assignedBy
   * @return assignedBy
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedBy() {
    return assignedBy;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssignedBy(String assignedBy) {
    this.assignedBy = assignedBy;
  }


  /**
   * Return true if this RestUserResponsible object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestUserResponsible restUserResponsible = (RestUserResponsible) o;
    return Objects.equals(this.assignedUser, restUserResponsible.assignedUser) &&
        Objects.equals(this.assignedBy, restUserResponsible.assignedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedUser, assignedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestUserResponsible {\n");
    sb.append("    assignedUser: ").append(toIndentedString(assignedUser)).append("\n");
    sb.append("    assignedBy: ").append(toIndentedString(assignedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

