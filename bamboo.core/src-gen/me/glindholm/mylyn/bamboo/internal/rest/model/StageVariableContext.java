/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import me.glindholm.mylyn.bamboo.internal.rest.model.ChainStageResult;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * StageVariableContext
 */
@JsonPropertyOrder({
  StageVariableContext.JSON_PROPERTY_CHAIN_STAGE_RESULT,
  StageVariableContext.JSON_PROPERTY_VARIABLE_TYPE,
  StageVariableContext.JSON_PROPERTY_VALUE,
  StageVariableContext.JSON_PROPERTY_KEY,
  StageVariableContext.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StageVariableContext implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CHAIN_STAGE_RESULT = "chainStageResult";
  private ChainStageResult chainStageResult;

  /**
   * Gets or Sets variableType
   */
  public enum VariableTypeEnum {
    GLOBAL("GLOBAL"),
    
    PLAN("PLAN"),
    
    JOB("JOB"),
    
    MANUAL("MANUAL"),
    
    CUSTOM("CUSTOM"),
    
    SYSTEM("SYSTEM"),
    
    UNKNOWN("UNKNOWN"),
    
    ENVIRONMENT("ENVIRONMENT"),
    
    VERSION("VERSION"),
    
    RESULT("RESULT"),
    
    PROJECT("PROJECT");

    private String value;

    VariableTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VariableTypeEnum fromValue(String value) {
      for (VariableTypeEnum b : VariableTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VARIABLE_TYPE = "variableType";
  private VariableTypeEnum variableType;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public StageVariableContext() { 
  }

  public StageVariableContext chainStageResult(ChainStageResult chainStageResult) {
    this.chainStageResult = chainStageResult;
    return this;
  }

   /**
   * Get chainStageResult
   * @return chainStageResult
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CHAIN_STAGE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChainStageResult getChainStageResult() {
    return chainStageResult;
  }


  @JsonProperty(JSON_PROPERTY_CHAIN_STAGE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChainStageResult(ChainStageResult chainStageResult) {
    this.chainStageResult = chainStageResult;
  }


  public StageVariableContext variableType(VariableTypeEnum variableType) {
    this.variableType = variableType;
    return this;
  }

   /**
   * Get variableType
   * @return variableType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VariableTypeEnum getVariableType() {
    return variableType;
  }


  @JsonProperty(JSON_PROPERTY_VARIABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVariableType(VariableTypeEnum variableType) {
    this.variableType = variableType;
  }


  public StageVariableContext value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
  }


  public StageVariableContext key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public StageVariableContext id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this StageVariableContext object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StageVariableContext stageVariableContext = (StageVariableContext) o;
    return Objects.equals(this.chainStageResult, stageVariableContext.chainStageResult) &&
        Objects.equals(this.variableType, stageVariableContext.variableType) &&
        Objects.equals(this.value, stageVariableContext.value) &&
        Objects.equals(this.key, stageVariableContext.key) &&
        Objects.equals(this.id, stageVariableContext.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chainStageResult, variableType, value, key, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StageVariableContext {\n");
    sb.append("    chainStageResult: ").append(toIndentedString(chainStageResult)).append("\n");
    sb.append("    variableType: ").append(toIndentedString(variableType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

