/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.rest.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.util.Date;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DeploymentVersionStatus
 */
@JsonPropertyOrder({
  DeploymentVersionStatus.JSON_PROPERTY_GRAVATAR_URL,
  DeploymentVersionStatus.JSON_PROPERTY_DISPLAY_NAME,
  DeploymentVersionStatus.JSON_PROPERTY_VERSION_STATE,
  DeploymentVersionStatus.JSON_PROPERTY_CREATION_DATE,
  DeploymentVersionStatus.JSON_PROPERTY_USER_NAME,
  DeploymentVersionStatus.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DeploymentVersionStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_GRAVATAR_URL = "gravatarUrl";
  private String gravatarUrl;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * Gets or Sets versionState
   */
  public enum VersionStateEnum {
    UNKNOWN("Unknown"),
    
    APPROVED("Approved"),
    
    BROKEN("Broken"),
    
    INCOMPLETE("Incomplete");

    private String value;

    VersionStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VersionStateEnum fromValue(String value) {
      for (VersionStateEnum b : VersionStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VERSION_STATE = "versionState";
  private VersionStateEnum versionState;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private Date creationDate;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public DeploymentVersionStatus() { 
  }

  public DeploymentVersionStatus gravatarUrl(String gravatarUrl) {
    this.gravatarUrl = gravatarUrl;
    return this;
  }

   /**
   * Get gravatarUrl
   * @return gravatarUrl
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GRAVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGravatarUrl() {
    return gravatarUrl;
  }


  @JsonProperty(JSON_PROPERTY_GRAVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGravatarUrl(String gravatarUrl) {
    this.gravatarUrl = gravatarUrl;
  }


  public DeploymentVersionStatus displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public DeploymentVersionStatus versionState(VersionStateEnum versionState) {
    this.versionState = versionState;
    return this;
  }

   /**
   * Get versionState
   * @return versionState
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VERSION_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VersionStateEnum getVersionState() {
    return versionState;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionState(VersionStateEnum versionState) {
    this.versionState = versionState;
  }


  public DeploymentVersionStatus creationDate(Date creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }


  public DeploymentVersionStatus userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public DeploymentVersionStatus id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this DeploymentVersionStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentVersionStatus deploymentVersionStatus = (DeploymentVersionStatus) o;
    return Objects.equals(this.gravatarUrl, deploymentVersionStatus.gravatarUrl) &&
        Objects.equals(this.displayName, deploymentVersionStatus.displayName) &&
        Objects.equals(this.versionState, deploymentVersionStatus.versionState) &&
        Objects.equals(this.creationDate, deploymentVersionStatus.creationDate) &&
        Objects.equals(this.userName, deploymentVersionStatus.userName) &&
        Objects.equals(this.id, deploymentVersionStatus.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gravatarUrl, displayName, versionState, creationDate, userName, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentVersionStatus {\n");
    sb.append("    gravatarUrl: ").append(toIndentedString(gravatarUrl)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    versionState: ").append(toIndentedString(versionState)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

