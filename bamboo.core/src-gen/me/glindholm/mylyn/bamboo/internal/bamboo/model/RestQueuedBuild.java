/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.Link;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.RepositoryChangeset;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.RestChangeList;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestQueuedBuild
 */
@JsonPropertyOrder({
  RestQueuedBuild.JSON_PROPERTY_EXPAND,
  RestQueuedBuild.JSON_PROPERTY_PLAN_KEY,
  RestQueuedBuild.JSON_PROPERTY_BUILD_NUMBER,
  RestQueuedBuild.JSON_PROPERTY_BUILD_RESULT_KEY,
  RestQueuedBuild.JSON_PROPERTY_TRIGGER_REASON,
  RestQueuedBuild.JSON_PROPERTY_CHANGES,
  RestQueuedBuild.JSON_PROPERTY_LINK,
  RestQueuedBuild.JSON_PROPERTY_CHANGESETS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestQueuedBuild implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EXPAND = "expand";
  private String expand;

  public static final String JSON_PROPERTY_PLAN_KEY = "planKey";
  private String planKey;

  public static final String JSON_PROPERTY_BUILD_NUMBER = "buildNumber";
  private Integer buildNumber;

  public static final String JSON_PROPERTY_BUILD_RESULT_KEY = "buildResultKey";
  private String buildResultKey;

  public static final String JSON_PROPERTY_TRIGGER_REASON = "triggerReason";
  private String triggerReason;

  public static final String JSON_PROPERTY_CHANGES = "changes";
  private RestChangeList changes;

  public static final String JSON_PROPERTY_LINK = "link";
  private Link link;

  public static final String JSON_PROPERTY_CHANGESETS = "changesets";
  private List<RepositoryChangeset> changesets;

  public RestQueuedBuild() { 
  }

  public RestQueuedBuild expand(String expand) {
    this.expand = expand;
    return this;
  }

   /**
   * Get expand
   * @return expand
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpand() {
    return expand;
  }


  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpand(String expand) {
    this.expand = expand;
  }


  public RestQueuedBuild planKey(String planKey) {
    this.planKey = planKey;
    return this;
  }

   /**
   * Get planKey
   * @return planKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlanKey() {
    return planKey;
  }


  @JsonProperty(JSON_PROPERTY_PLAN_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlanKey(String planKey) {
    this.planKey = planKey;
  }


  public RestQueuedBuild buildNumber(Integer buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

   /**
   * Get buildNumber
   * @return buildNumber
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuildNumber() {
    return buildNumber;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildNumber(Integer buildNumber) {
    this.buildNumber = buildNumber;
  }


  public RestQueuedBuild buildResultKey(String buildResultKey) {
    this.buildResultKey = buildResultKey;
    return this;
  }

   /**
   * Get buildResultKey
   * @return buildResultKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_RESULT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBuildResultKey() {
    return buildResultKey;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_RESULT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildResultKey(String buildResultKey) {
    this.buildResultKey = buildResultKey;
  }


  public RestQueuedBuild triggerReason(String triggerReason) {
    this.triggerReason = triggerReason;
    return this;
  }

   /**
   * Get triggerReason
   * @return triggerReason
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TRIGGER_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTriggerReason() {
    return triggerReason;
  }


  @JsonProperty(JSON_PROPERTY_TRIGGER_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTriggerReason(String triggerReason) {
    this.triggerReason = triggerReason;
  }


  public RestQueuedBuild changes(RestChangeList changes) {
    this.changes = changes;
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestChangeList getChanges() {
    return changes;
  }


  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChanges(RestChangeList changes) {
    this.changes = changes;
  }


  public RestQueuedBuild link(Link link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Link getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(Link link) {
    this.link = link;
  }


  public RestQueuedBuild changesets(List<RepositoryChangeset> changesets) {
    this.changesets = changesets;
    return this;
  }

  public RestQueuedBuild addChangesetsItem(RepositoryChangeset changesetsItem) {
    if (this.changesets == null) {
      this.changesets = new ArrayList<>();
    }
    this.changesets.add(changesetsItem);
    return this;
  }

   /**
   * Get changesets
   * @return changesets
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CHANGESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RepositoryChangeset> getChangesets() {
    return changesets;
  }


  @JsonProperty(JSON_PROPERTY_CHANGESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangesets(List<RepositoryChangeset> changesets) {
    this.changesets = changesets;
  }


  /**
   * Return true if this RestQueuedBuild object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestQueuedBuild restQueuedBuild = (RestQueuedBuild) o;
    return Objects.equals(this.expand, restQueuedBuild.expand) &&
        Objects.equals(this.planKey, restQueuedBuild.planKey) &&
        Objects.equals(this.buildNumber, restQueuedBuild.buildNumber) &&
        Objects.equals(this.buildResultKey, restQueuedBuild.buildResultKey) &&
        Objects.equals(this.triggerReason, restQueuedBuild.triggerReason) &&
        Objects.equals(this.changes, restQueuedBuild.changes) &&
        Objects.equals(this.link, restQueuedBuild.link) &&
        Objects.equals(this.changesets, restQueuedBuild.changesets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expand, planKey, buildNumber, buildResultKey, triggerReason, changes, link, changesets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestQueuedBuild {\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    planKey: ").append(toIndentedString(planKey)).append("\n");
    sb.append("    buildNumber: ").append(toIndentedString(buildNumber)).append("\n");
    sb.append("    buildResultKey: ").append(toIndentedString(buildResultKey)).append("\n");
    sb.append("    triggerReason: ").append(toIndentedString(triggerReason)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    changesets: ").append(toIndentedString(changesets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

