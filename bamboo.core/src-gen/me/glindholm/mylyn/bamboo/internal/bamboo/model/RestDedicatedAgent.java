/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestDedicatedAgent
 */
@JsonPropertyOrder({
  RestDedicatedAgent.JSON_PROPERTY_EXECUTABLE_TYPE,
  RestDedicatedAgent.JSON_PROPERTY_EXECUTABLE_ID,
  RestDedicatedAgent.JSON_PROPERTY_EXECUTOR_TYPE,
  RestDedicatedAgent.JSON_PROPERTY_EXECUTOR_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestDedicatedAgent implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets executableType
   */
  public enum ExecutableTypeEnum {
    BUILD_PROJECT("Build project"),
    
    BUILD_PLAN("Build plan"),
    
    BUILD_JOB("Build job"),
    
    DEPLOYMENT_PROJECT("Deployment project"),
    
    DEPLOYMENT_ENVIRONMENT("Deployment environment");

    private String value;

    ExecutableTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutableTypeEnum fromValue(String value) {
      for (ExecutableTypeEnum b : ExecutableTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXECUTABLE_TYPE = "executableType";
  private ExecutableTypeEnum executableType;

  public static final String JSON_PROPERTY_EXECUTABLE_ID = "executableId";
  private Long executableId;

  /**
   * Gets or Sets executorType
   */
  public enum ExecutorTypeEnum {
    AGENT("AGENT"),
    
    IMAGE("IMAGE"),
    
    EPHEMERAL("EPHEMERAL");

    private String value;

    ExecutorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutorTypeEnum fromValue(String value) {
      for (ExecutorTypeEnum b : ExecutorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXECUTOR_TYPE = "executorType";
  private ExecutorTypeEnum executorType;

  public static final String JSON_PROPERTY_EXECUTOR_ID = "executorId";
  private Long executorId;

  public RestDedicatedAgent() { 
  }

  public RestDedicatedAgent executableType(ExecutableTypeEnum executableType) {
    this.executableType = executableType;
    return this;
  }

   /**
   * Get executableType
   * @return executableType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXECUTABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutableTypeEnum getExecutableType() {
    return executableType;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTABLE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutableType(ExecutableTypeEnum executableType) {
    this.executableType = executableType;
  }


  public RestDedicatedAgent executableId(Long executableId) {
    this.executableId = executableId;
    return this;
  }

   /**
   * Get executableId
   * @return executableId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXECUTABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExecutableId() {
    return executableId;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTABLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutableId(Long executableId) {
    this.executableId = executableId;
  }


  public RestDedicatedAgent executorType(ExecutorTypeEnum executorType) {
    this.executorType = executorType;
    return this;
  }

   /**
   * Get executorType
   * @return executorType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXECUTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExecutorTypeEnum getExecutorType() {
    return executorType;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutorType(ExecutorTypeEnum executorType) {
    this.executorType = executorType;
  }


  public RestDedicatedAgent executorId(Long executorId) {
    this.executorId = executorId;
    return this;
  }

   /**
   * Get executorId
   * @return executorId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXECUTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExecutorId() {
    return executorId;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutorId(Long executorId) {
    this.executorId = executorId;
  }


  /**
   * Return true if this RestDedicatedAgent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestDedicatedAgent restDedicatedAgent = (RestDedicatedAgent) o;
    return Objects.equals(this.executableType, restDedicatedAgent.executableType) &&
        Objects.equals(this.executableId, restDedicatedAgent.executableId) &&
        Objects.equals(this.executorType, restDedicatedAgent.executorType) &&
        Objects.equals(this.executorId, restDedicatedAgent.executorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executableType, executableId, executorType, executorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestDedicatedAgent {\n");
    sb.append("    executableType: ").append(toIndentedString(executableType)).append("\n");
    sb.append("    executableId: ").append(toIndentedString(executableId)).append("\n");
    sb.append("    executorType: ").append(toIndentedString(executorType)).append("\n");
    sb.append("    executorId: ").append(toIndentedString(executorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

