/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.RestProgress;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.RestStageResultList;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestResultStatus
 */
@JsonPropertyOrder({
  RestResultStatus.JSON_PROPERTY_KEY,
  RestResultStatus.JSON_PROPERTY_FINISHED,
  RestResultStatus.JSON_PROPERTY_PRETTY_QUEUED_TIME,
  RestResultStatus.JSON_PROPERTY_PROGRESS,
  RestResultStatus.JSON_PROPERTY_CURRENT_STAGE,
  RestResultStatus.JSON_PROPERTY_STAGES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestResultStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_FINISHED = "finished";
  private Boolean finished;

  public static final String JSON_PROPERTY_PRETTY_QUEUED_TIME = "prettyQueuedTime";
  private String prettyQueuedTime;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private RestProgress progress;

  public static final String JSON_PROPERTY_CURRENT_STAGE = "currentStage";
  private String currentStage;

  public static final String JSON_PROPERTY_STAGES = "stages";
  private RestStageResultList stages;

  public RestResultStatus() { 
  }

  public RestResultStatus key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public RestResultStatus finished(Boolean finished) {
    this.finished = finished;
    return this;
  }

   /**
   * Get finished
   * @return finished
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FINISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFinished() {
    return finished;
  }


  @JsonProperty(JSON_PROPERTY_FINISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinished(Boolean finished) {
    this.finished = finished;
  }


  public RestResultStatus prettyQueuedTime(String prettyQueuedTime) {
    this.prettyQueuedTime = prettyQueuedTime;
    return this;
  }

   /**
   * Get prettyQueuedTime
   * @return prettyQueuedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyQueuedTime() {
    return prettyQueuedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_QUEUED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyQueuedTime(String prettyQueuedTime) {
    this.prettyQueuedTime = prettyQueuedTime;
  }


  public RestResultStatus progress(RestProgress progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestProgress getProgress() {
    return progress;
  }


  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgress(RestProgress progress) {
    this.progress = progress;
  }


  public RestResultStatus currentStage(String currentStage) {
    this.currentStage = currentStage;
    return this;
  }

   /**
   * Get currentStage
   * @return currentStage
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentStage() {
    return currentStage;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_STAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentStage(String currentStage) {
    this.currentStage = currentStage;
  }


  public RestResultStatus stages(RestStageResultList stages) {
    this.stages = stages;
    return this;
  }

   /**
   * Get stages
   * @return stages
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RestStageResultList getStages() {
    return stages;
  }


  @JsonProperty(JSON_PROPERTY_STAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStages(RestStageResultList stages) {
    this.stages = stages;
  }


  /**
   * Return true if this RestResultStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestResultStatus restResultStatus = (RestResultStatus) o;
    return Objects.equals(this.key, restResultStatus.key) &&
        Objects.equals(this.finished, restResultStatus.finished) &&
        Objects.equals(this.prettyQueuedTime, restResultStatus.prettyQueuedTime) &&
        Objects.equals(this.progress, restResultStatus.progress) &&
        Objects.equals(this.currentStage, restResultStatus.currentStage) &&
        Objects.equals(this.stages, restResultStatus.stages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, finished, prettyQueuedTime, progress, currentStage, stages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestResultStatus {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    prettyQueuedTime: ").append(toIndentedString(prettyQueuedTime)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    currentStage: ").append(toIndentedString(currentStage)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

