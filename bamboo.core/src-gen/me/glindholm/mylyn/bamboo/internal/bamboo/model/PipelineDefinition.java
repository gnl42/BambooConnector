/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.ResultKey;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PipelineDefinition
 */
@JsonPropertyOrder({
  PipelineDefinition.JSON_PROPERTY_DEDICATED,
  PipelineDefinition.JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION_UNTYPED,
  PipelineDefinition.JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION,
  PipelineDefinition.JSON_PROPERTY_CREATION_DATE,
  PipelineDefinition.JSON_PROPERTY_ENABLED,
  PipelineDefinition.JSON_PROPERTY_DESCRIPTION,
  PipelineDefinition.JSON_PROPERTY_LAST_MODIFICATION_DATE,
  PipelineDefinition.JSON_PROPERTY_NAME,
  PipelineDefinition.JSON_PROPERTY_TYPE,
  PipelineDefinition.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class PipelineDefinition implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DEDICATED = "dedicated";
  private Boolean dedicated;

  public static final String JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION_UNTYPED = "ephemeralAgentDedicationUntyped";
  private String ephemeralAgentDedicationUntyped;

  public static final String JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION = "ephemeralAgentDedication";
  private ResultKey ephemeralAgentDedication;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private Date creationDate;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LAST_MODIFICATION_DATE = "lastModificationDate";
  private Date lastModificationDate;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    LOCAL("LOCAL"),
    
    REMOTE("REMOTE"),
    
    ELASTIC("ELASTIC"),
    
    EPHEMERAL("EPHEMERAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public PipelineDefinition() { 
  }

  public PipelineDefinition dedicated(Boolean dedicated) {
    this.dedicated = dedicated;
    return this;
  }

   /**
   * Get dedicated
   * @return dedicated
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DEDICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDedicated() {
    return dedicated;
  }


  @JsonProperty(JSON_PROPERTY_DEDICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDedicated(Boolean dedicated) {
    this.dedicated = dedicated;
  }


  public PipelineDefinition ephemeralAgentDedicationUntyped(String ephemeralAgentDedicationUntyped) {
    this.ephemeralAgentDedicationUntyped = ephemeralAgentDedicationUntyped;
    return this;
  }

   /**
   * Get ephemeralAgentDedicationUntyped
   * @return ephemeralAgentDedicationUntyped
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION_UNTYPED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEphemeralAgentDedicationUntyped() {
    return ephemeralAgentDedicationUntyped;
  }


  @JsonProperty(JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION_UNTYPED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEphemeralAgentDedicationUntyped(String ephemeralAgentDedicationUntyped) {
    this.ephemeralAgentDedicationUntyped = ephemeralAgentDedicationUntyped;
  }


  public PipelineDefinition ephemeralAgentDedication(ResultKey ephemeralAgentDedication) {
    this.ephemeralAgentDedication = ephemeralAgentDedication;
    return this;
  }

   /**
   * Get ephemeralAgentDedication
   * @return ephemeralAgentDedication
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultKey getEphemeralAgentDedication() {
    return ephemeralAgentDedication;
  }


  @JsonProperty(JSON_PROPERTY_EPHEMERAL_AGENT_DEDICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEphemeralAgentDedication(ResultKey ephemeralAgentDedication) {
    this.ephemeralAgentDedication = ephemeralAgentDedication;
  }


  public PipelineDefinition creationDate(Date creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }


  public PipelineDefinition enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public PipelineDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PipelineDefinition lastModificationDate(Date lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
    return this;
  }

   /**
   * Get lastModificationDate
   * @return lastModificationDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LAST_MODIFICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getLastModificationDate() {
    return lastModificationDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastModificationDate(Date lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
  }


  public PipelineDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PipelineDefinition type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PipelineDefinition id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this PipelineDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineDefinition pipelineDefinition = (PipelineDefinition) o;
    return Objects.equals(this.dedicated, pipelineDefinition.dedicated) &&
        Objects.equals(this.ephemeralAgentDedicationUntyped, pipelineDefinition.ephemeralAgentDedicationUntyped) &&
        Objects.equals(this.ephemeralAgentDedication, pipelineDefinition.ephemeralAgentDedication) &&
        Objects.equals(this.creationDate, pipelineDefinition.creationDate) &&
        Objects.equals(this.enabled, pipelineDefinition.enabled) &&
        Objects.equals(this.description, pipelineDefinition.description) &&
        Objects.equals(this.lastModificationDate, pipelineDefinition.lastModificationDate) &&
        Objects.equals(this.name, pipelineDefinition.name) &&
        Objects.equals(this.type, pipelineDefinition.type) &&
        Objects.equals(this.id, pipelineDefinition.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dedicated, ephemeralAgentDedicationUntyped, ephemeralAgentDedication, creationDate, enabled, description, lastModificationDate, name, type, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineDefinition {\n");
    sb.append("    dedicated: ").append(toIndentedString(dedicated)).append("\n");
    sb.append("    ephemeralAgentDedicationUntyped: ").append(toIndentedString(ephemeralAgentDedicationUntyped)).append("\n");
    sb.append("    ephemeralAgentDedication: ").append(toIndentedString(ephemeralAgentDedication)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastModificationDate: ").append(toIndentedString(lastModificationDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

