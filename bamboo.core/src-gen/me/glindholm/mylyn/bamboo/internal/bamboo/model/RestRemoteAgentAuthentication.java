/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.LinkedHashSet;
import java.util.Set;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestRemoteAgentAuthentication
 */
@JsonPropertyOrder({
  RestRemoteAgentAuthentication.JSON_PROPERTY_APPROVED,
  RestRemoteAgentAuthentication.JSON_PROPERTY_IP,
  RestRemoteAgentAuthentication.JSON_PROPERTY_IP_PATTERNS,
  RestRemoteAgentAuthentication.JSON_PROPERTY_UUID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestRemoteAgentAuthentication implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_APPROVED = "approved";
  private Boolean approved;

  public static final String JSON_PROPERTY_IP = "ip";
  private String ip;

  public static final String JSON_PROPERTY_IP_PATTERNS = "ipPatterns";
  private Set<String> ipPatterns;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private String uuid;

  public RestRemoteAgentAuthentication() { 
  }

  public RestRemoteAgentAuthentication approved(Boolean approved) {
    this.approved = approved;
    return this;
  }

   /**
   * Get approved
   * @return approved
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApproved() {
    return approved;
  }


  @JsonProperty(JSON_PROPERTY_APPROVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApproved(Boolean approved) {
    this.approved = approved;
  }


  public RestRemoteAgentAuthentication ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIp() {
    return ip;
  }


  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIp(String ip) {
    this.ip = ip;
  }


  public RestRemoteAgentAuthentication ipPatterns(Set<String> ipPatterns) {
    this.ipPatterns = ipPatterns;
    return this;
  }

  public RestRemoteAgentAuthentication addIpPatternsItem(String ipPatternsItem) {
    if (this.ipPatterns == null) {
      this.ipPatterns = new LinkedHashSet<>();
    }
    this.ipPatterns.add(ipPatternsItem);
    return this;
  }

   /**
   * Get ipPatterns
   * @return ipPatterns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IP_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getIpPatterns() {
    return ipPatterns;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_IP_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpPatterns(Set<String> ipPatterns) {
    this.ipPatterns = ipPatterns;
  }


  public RestRemoteAgentAuthentication uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  /**
   * Return true if this RestRemoteAgentAuthentication object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestRemoteAgentAuthentication restRemoteAgentAuthentication = (RestRemoteAgentAuthentication) o;
    return Objects.equals(this.approved, restRemoteAgentAuthentication.approved) &&
        Objects.equals(this.ip, restRemoteAgentAuthentication.ip) &&
        Objects.equals(this.ipPatterns, restRemoteAgentAuthentication.ipPatterns) &&
        Objects.equals(this.uuid, restRemoteAgentAuthentication.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approved, ip, ipPatterns, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestRemoteAgentAuthentication {\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ipPatterns: ").append(toIndentedString(ipPatterns)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

