/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestBuildMonitoring
 */
@JsonPropertyOrder({
  RestBuildMonitoring.JSON_PROPERTY_BUILD_MONITORING_ENABLED,
  RestBuildMonitoring.JSON_PROPERTY_BUILD_TIME_MULTIPLIER_DEFAULT,
  RestBuildMonitoring.JSON_PROPERTY_LOG_QUIET_MINUTES_TIME_DEFAULT,
  RestBuildMonitoring.JSON_PROPERTY_BUILD_QUEUE_MINUTES_TIMEOUT_DEFAULT,
  RestBuildMonitoring.JSON_PROPERTY_LIVE_LOGS_ARE_ACTIVE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestBuildMonitoring implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BUILD_MONITORING_ENABLED = "buildMonitoringEnabled";
  private Boolean buildMonitoringEnabled;

  public static final String JSON_PROPERTY_BUILD_TIME_MULTIPLIER_DEFAULT = "buildTimeMultiplierDefault";
  private Double buildTimeMultiplierDefault;

  public static final String JSON_PROPERTY_LOG_QUIET_MINUTES_TIME_DEFAULT = "logQuietMinutesTimeDefault";
  private Integer logQuietMinutesTimeDefault;

  public static final String JSON_PROPERTY_BUILD_QUEUE_MINUTES_TIMEOUT_DEFAULT = "buildQueueMinutesTimeoutDefault";
  private Integer buildQueueMinutesTimeoutDefault;

  public static final String JSON_PROPERTY_LIVE_LOGS_ARE_ACTIVE = "liveLogsAreActive";
  private Boolean liveLogsAreActive;

  public RestBuildMonitoring() { 
  }

  public RestBuildMonitoring buildMonitoringEnabled(Boolean buildMonitoringEnabled) {
    this.buildMonitoringEnabled = buildMonitoringEnabled;
    return this;
  }

   /**
   * Get buildMonitoringEnabled
   * @return buildMonitoringEnabled
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_MONITORING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBuildMonitoringEnabled() {
    return buildMonitoringEnabled;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_MONITORING_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildMonitoringEnabled(Boolean buildMonitoringEnabled) {
    this.buildMonitoringEnabled = buildMonitoringEnabled;
  }


  public RestBuildMonitoring buildTimeMultiplierDefault(Double buildTimeMultiplierDefault) {
    this.buildTimeMultiplierDefault = buildTimeMultiplierDefault;
    return this;
  }

   /**
   * Get buildTimeMultiplierDefault
   * @return buildTimeMultiplierDefault
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "2.5", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_TIME_MULTIPLIER_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBuildTimeMultiplierDefault() {
    return buildTimeMultiplierDefault;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_TIME_MULTIPLIER_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildTimeMultiplierDefault(Double buildTimeMultiplierDefault) {
    this.buildTimeMultiplierDefault = buildTimeMultiplierDefault;
  }


  public RestBuildMonitoring logQuietMinutesTimeDefault(Integer logQuietMinutesTimeDefault) {
    this.logQuietMinutesTimeDefault = logQuietMinutesTimeDefault;
    return this;
  }

   /**
   * Get logQuietMinutesTimeDefault
   * @return logQuietMinutesTimeDefault
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "10", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LOG_QUIET_MINUTES_TIME_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLogQuietMinutesTimeDefault() {
    return logQuietMinutesTimeDefault;
  }


  @JsonProperty(JSON_PROPERTY_LOG_QUIET_MINUTES_TIME_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogQuietMinutesTimeDefault(Integer logQuietMinutesTimeDefault) {
    this.logQuietMinutesTimeDefault = logQuietMinutesTimeDefault;
  }


  public RestBuildMonitoring buildQueueMinutesTimeoutDefault(Integer buildQueueMinutesTimeoutDefault) {
    this.buildQueueMinutesTimeoutDefault = buildQueueMinutesTimeoutDefault;
    return this;
  }

   /**
   * Get buildQueueMinutesTimeoutDefault
   * @return buildQueueMinutesTimeoutDefault
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "30", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_QUEUE_MINUTES_TIMEOUT_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuildQueueMinutesTimeoutDefault() {
    return buildQueueMinutesTimeoutDefault;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_QUEUE_MINUTES_TIMEOUT_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildQueueMinutesTimeoutDefault(Integer buildQueueMinutesTimeoutDefault) {
    this.buildQueueMinutesTimeoutDefault = buildQueueMinutesTimeoutDefault;
  }


  public RestBuildMonitoring liveLogsAreActive(Boolean liveLogsAreActive) {
    this.liveLogsAreActive = liveLogsAreActive;
    return this;
  }

   /**
   * Get liveLogsAreActive
   * @return liveLogsAreActive
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LIVE_LOGS_ARE_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLiveLogsAreActive() {
    return liveLogsAreActive;
  }


  @JsonProperty(JSON_PROPERTY_LIVE_LOGS_ARE_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiveLogsAreActive(Boolean liveLogsAreActive) {
    this.liveLogsAreActive = liveLogsAreActive;
  }


  /**
   * Return true if this RestBuildMonitoring object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestBuildMonitoring restBuildMonitoring = (RestBuildMonitoring) o;
    return Objects.equals(this.buildMonitoringEnabled, restBuildMonitoring.buildMonitoringEnabled) &&
        Objects.equals(this.buildTimeMultiplierDefault, restBuildMonitoring.buildTimeMultiplierDefault) &&
        Objects.equals(this.logQuietMinutesTimeDefault, restBuildMonitoring.logQuietMinutesTimeDefault) &&
        Objects.equals(this.buildQueueMinutesTimeoutDefault, restBuildMonitoring.buildQueueMinutesTimeoutDefault) &&
        Objects.equals(this.liveLogsAreActive, restBuildMonitoring.liveLogsAreActive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buildMonitoringEnabled, buildTimeMultiplierDefault, logQuietMinutesTimeDefault, buildQueueMinutesTimeoutDefault, liveLogsAreActive);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestBuildMonitoring {\n");
    sb.append("    buildMonitoringEnabled: ").append(toIndentedString(buildMonitoringEnabled)).append("\n");
    sb.append("    buildTimeMultiplierDefault: ").append(toIndentedString(buildTimeMultiplierDefault)).append("\n");
    sb.append("    logQuietMinutesTimeDefault: ").append(toIndentedString(logQuietMinutesTimeDefault)).append("\n");
    sb.append("    buildQueueMinutesTimeoutDefault: ").append(toIndentedString(buildQueueMinutesTimeoutDefault)).append("\n");
    sb.append("    liveLogsAreActive: ").append(toIndentedString(liveLogsAreActive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

