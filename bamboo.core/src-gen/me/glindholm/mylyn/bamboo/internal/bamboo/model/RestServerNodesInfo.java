/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.RestNodeStatus;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestServerNodesInfo
 */
@JsonPropertyOrder({
  RestServerNodesInfo.JSON_PROPERTY_STATE,
  RestServerNodesInfo.JSON_PROPERTY_SET_BY_USER,
  RestServerNodesInfo.JSON_PROPERTY_REINDEX_IN_PROGRESS,
  RestServerNodesInfo.JSON_PROPERTY_NODE_STATUSES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestServerNodesInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    SETUP("SETUP"),
    
    STARTING("STARTING"),
    
    RUNNING("RUNNING"),
    
    PAUSING("PAUSING"),
    
    PREPARING_FOR_RESTART("PREPARING_FOR_RESTART"),
    
    READY_FOR_RESTART("READY_FOR_RESTART"),
    
    PAUSED("PAUSED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_SET_BY_USER = "setByUser";
  private String setByUser;

  public static final String JSON_PROPERTY_REINDEX_IN_PROGRESS = "reindexInProgress";
  private Boolean reindexInProgress;

  public static final String JSON_PROPERTY_NODE_STATUSES = "nodeStatuses";
  private List<RestNodeStatus> nodeStatuses;

  public RestServerNodesInfo() { 
  }

  public RestServerNodesInfo state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public RestServerNodesInfo setByUser(String setByUser) {
    this.setByUser = setByUser;
    return this;
  }

   /**
   * Get setByUser
   * @return setByUser
  **/
  @jakarta.annotation.Nullable
  @Schema(example = "admin", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SET_BY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSetByUser() {
    return setByUser;
  }


  @JsonProperty(JSON_PROPERTY_SET_BY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSetByUser(String setByUser) {
    this.setByUser = setByUser;
  }


  public RestServerNodesInfo reindexInProgress(Boolean reindexInProgress) {
    this.reindexInProgress = reindexInProgress;
    return this;
  }

   /**
   * Get reindexInProgress
   * @return reindexInProgress
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REINDEX_IN_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReindexInProgress() {
    return reindexInProgress;
  }


  @JsonProperty(JSON_PROPERTY_REINDEX_IN_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReindexInProgress(Boolean reindexInProgress) {
    this.reindexInProgress = reindexInProgress;
  }


  public RestServerNodesInfo nodeStatuses(List<RestNodeStatus> nodeStatuses) {
    this.nodeStatuses = nodeStatuses;
    return this;
  }

  public RestServerNodesInfo addNodeStatusesItem(RestNodeStatus nodeStatusesItem) {
    if (this.nodeStatuses == null) {
      this.nodeStatuses = new ArrayList<>();
    }
    this.nodeStatuses.add(nodeStatusesItem);
    return this;
  }

   /**
   * Get nodeStatuses
   * @return nodeStatuses
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NODE_STATUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RestNodeStatus> getNodeStatuses() {
    return nodeStatuses;
  }


  @JsonProperty(JSON_PROPERTY_NODE_STATUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeStatuses(List<RestNodeStatus> nodeStatuses) {
    this.nodeStatuses = nodeStatuses;
  }


  /**
   * Return true if this RestServerNodesInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestServerNodesInfo restServerNodesInfo = (RestServerNodesInfo) o;
    return Objects.equals(this.state, restServerNodesInfo.state) &&
        Objects.equals(this.setByUser, restServerNodesInfo.setByUser) &&
        Objects.equals(this.reindexInProgress, restServerNodesInfo.reindexInProgress) &&
        Objects.equals(this.nodeStatuses, restServerNodesInfo.nodeStatuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, setByUser, reindexInProgress, nodeStatuses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestServerNodesInfo {\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    setByUser: ").append(toIndentedString(setByUser)).append("\n");
    sb.append("    reindexInProgress: ").append(toIndentedString(reindexInProgress)).append("\n");
    sb.append("    nodeStatuses: ").append(toIndentedString(nodeStatuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

