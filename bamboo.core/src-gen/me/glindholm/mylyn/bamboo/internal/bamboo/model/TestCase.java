/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.QuarantineStatistics;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.TestClass;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TestCase
 */
@JsonPropertyOrder({
  TestCase.JSON_PROPERTY_SUCCESS_PERCENTAGE,
  TestCase.JSON_PROPERTY_LAST_RAN_BUILD_NUMBER,
  TestCase.JSON_PROPERTY_QUARANTINE_STATISTICS,
  TestCase.JSON_PROPERTY_LINKED_JIRA_ISSUE_KEY,
  TestCase.JSON_PROPERTY_TEST_CLASS,
  TestCase.JSON_PROPERTY_TOTAL_TEST_RUNS,
  TestCase.JSON_PROPERTY_NUMBER_OF_SUCCESS_RUNS,
  TestCase.JSON_PROPERTY_NUMBER_OF_SKIPPED_RUNS,
  TestCase.JSON_PROPERTY_NUMBER_OF_FAILED_RUNS,
  TestCase.JSON_PROPERTY_AVERAGE_DURATION,
  TestCase.JSON_PROPERTY_AVERAGE_DURATION_IN_SECONDS,
  TestCase.JSON_PROPERTY_FIRST_RAN_BUILD_NUMBER,
  TestCase.JSON_PROPERTY_QUARANTINED,
  TestCase.JSON_PROPERTY_NAME,
  TestCase.JSON_PROPERTY_METHOD_NAME,
  TestCase.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class TestCase implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SUCCESS_PERCENTAGE = "successPercentage";
  private Double successPercentage;

  public static final String JSON_PROPERTY_LAST_RAN_BUILD_NUMBER = "lastRanBuildNumber";
  private Integer lastRanBuildNumber;

  public static final String JSON_PROPERTY_QUARANTINE_STATISTICS = "quarantineStatistics";
  private QuarantineStatistics quarantineStatistics;

  public static final String JSON_PROPERTY_LINKED_JIRA_ISSUE_KEY = "linkedJiraIssueKey";
  private String linkedJiraIssueKey;

  public static final String JSON_PROPERTY_TEST_CLASS = "testClass";
  private TestClass testClass;

  public static final String JSON_PROPERTY_TOTAL_TEST_RUNS = "totalTestRuns";
  private Integer totalTestRuns;

  public static final String JSON_PROPERTY_NUMBER_OF_SUCCESS_RUNS = "numberOfSuccessRuns";
  private Integer numberOfSuccessRuns;

  public static final String JSON_PROPERTY_NUMBER_OF_SKIPPED_RUNS = "numberOfSkippedRuns";
  private Integer numberOfSkippedRuns;

  public static final String JSON_PROPERTY_NUMBER_OF_FAILED_RUNS = "numberOfFailedRuns";
  private Integer numberOfFailedRuns;

  public static final String JSON_PROPERTY_AVERAGE_DURATION = "averageDuration";
  private Long averageDuration;

  public static final String JSON_PROPERTY_AVERAGE_DURATION_IN_SECONDS = "averageDurationInSeconds";
  private Long averageDurationInSeconds;

  public static final String JSON_PROPERTY_FIRST_RAN_BUILD_NUMBER = "firstRanBuildNumber";
  private Integer firstRanBuildNumber;

  public static final String JSON_PROPERTY_QUARANTINED = "quarantined";
  private Boolean quarantined;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_METHOD_NAME = "methodName";
  private String methodName;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public TestCase() { 
  }

  public TestCase successPercentage(Double successPercentage) {
    this.successPercentage = successPercentage;
    return this;
  }

   /**
   * Get successPercentage
   * @return successPercentage
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUCCESS_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSuccessPercentage() {
    return successPercentage;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessPercentage(Double successPercentage) {
    this.successPercentage = successPercentage;
  }


  public TestCase lastRanBuildNumber(Integer lastRanBuildNumber) {
    this.lastRanBuildNumber = lastRanBuildNumber;
    return this;
  }

   /**
   * Get lastRanBuildNumber
   * @return lastRanBuildNumber
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LAST_RAN_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLastRanBuildNumber() {
    return lastRanBuildNumber;
  }


  @JsonProperty(JSON_PROPERTY_LAST_RAN_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastRanBuildNumber(Integer lastRanBuildNumber) {
    this.lastRanBuildNumber = lastRanBuildNumber;
  }


  public TestCase quarantineStatistics(QuarantineStatistics quarantineStatistics) {
    this.quarantineStatistics = quarantineStatistics;
    return this;
  }

   /**
   * Get quarantineStatistics
   * @return quarantineStatistics
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUARANTINE_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QuarantineStatistics getQuarantineStatistics() {
    return quarantineStatistics;
  }


  @JsonProperty(JSON_PROPERTY_QUARANTINE_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuarantineStatistics(QuarantineStatistics quarantineStatistics) {
    this.quarantineStatistics = quarantineStatistics;
  }


  public TestCase linkedJiraIssueKey(String linkedJiraIssueKey) {
    this.linkedJiraIssueKey = linkedJiraIssueKey;
    return this;
  }

   /**
   * Get linkedJiraIssueKey
   * @return linkedJiraIssueKey
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LINKED_JIRA_ISSUE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkedJiraIssueKey() {
    return linkedJiraIssueKey;
  }


  @JsonProperty(JSON_PROPERTY_LINKED_JIRA_ISSUE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkedJiraIssueKey(String linkedJiraIssueKey) {
    this.linkedJiraIssueKey = linkedJiraIssueKey;
  }


  public TestCase testClass(TestClass testClass) {
    this.testClass = testClass;
    return this;
  }

   /**
   * Get testClass
   * @return testClass
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TEST_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TestClass getTestClass() {
    return testClass;
  }


  @JsonProperty(JSON_PROPERTY_TEST_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestClass(TestClass testClass) {
    this.testClass = testClass;
  }


  public TestCase totalTestRuns(Integer totalTestRuns) {
    this.totalTestRuns = totalTestRuns;
    return this;
  }

   /**
   * Get totalTestRuns
   * @return totalTestRuns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_TEST_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalTestRuns() {
    return totalTestRuns;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_TEST_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalTestRuns(Integer totalTestRuns) {
    this.totalTestRuns = totalTestRuns;
  }


  public TestCase numberOfSuccessRuns(Integer numberOfSuccessRuns) {
    this.numberOfSuccessRuns = numberOfSuccessRuns;
    return this;
  }

   /**
   * Get numberOfSuccessRuns
   * @return numberOfSuccessRuns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SUCCESS_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfSuccessRuns() {
    return numberOfSuccessRuns;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SUCCESS_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfSuccessRuns(Integer numberOfSuccessRuns) {
    this.numberOfSuccessRuns = numberOfSuccessRuns;
  }


  public TestCase numberOfSkippedRuns(Integer numberOfSkippedRuns) {
    this.numberOfSkippedRuns = numberOfSkippedRuns;
    return this;
  }

   /**
   * Get numberOfSkippedRuns
   * @return numberOfSkippedRuns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SKIPPED_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfSkippedRuns() {
    return numberOfSkippedRuns;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SKIPPED_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfSkippedRuns(Integer numberOfSkippedRuns) {
    this.numberOfSkippedRuns = numberOfSkippedRuns;
  }


  public TestCase numberOfFailedRuns(Integer numberOfFailedRuns) {
    this.numberOfFailedRuns = numberOfFailedRuns;
    return this;
  }

   /**
   * Get numberOfFailedRuns
   * @return numberOfFailedRuns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_FAILED_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfFailedRuns() {
    return numberOfFailedRuns;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_FAILED_RUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfFailedRuns(Integer numberOfFailedRuns) {
    this.numberOfFailedRuns = numberOfFailedRuns;
  }


  public TestCase averageDuration(Long averageDuration) {
    this.averageDuration = averageDuration;
    return this;
  }

   /**
   * Get averageDuration
   * @return averageDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AVERAGE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAverageDuration() {
    return averageDuration;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageDuration(Long averageDuration) {
    this.averageDuration = averageDuration;
  }


  public TestCase averageDurationInSeconds(Long averageDurationInSeconds) {
    this.averageDurationInSeconds = averageDurationInSeconds;
    return this;
  }

   /**
   * Get averageDurationInSeconds
   * @return averageDurationInSeconds
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AVERAGE_DURATION_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAverageDurationInSeconds() {
    return averageDurationInSeconds;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_DURATION_IN_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageDurationInSeconds(Long averageDurationInSeconds) {
    this.averageDurationInSeconds = averageDurationInSeconds;
  }


  public TestCase firstRanBuildNumber(Integer firstRanBuildNumber) {
    this.firstRanBuildNumber = firstRanBuildNumber;
    return this;
  }

   /**
   * Get firstRanBuildNumber
   * @return firstRanBuildNumber
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FIRST_RAN_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFirstRanBuildNumber() {
    return firstRanBuildNumber;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_RAN_BUILD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstRanBuildNumber(Integer firstRanBuildNumber) {
    this.firstRanBuildNumber = firstRanBuildNumber;
  }


  public TestCase quarantined(Boolean quarantined) {
    this.quarantined = quarantined;
    return this;
  }

   /**
   * Get quarantined
   * @return quarantined
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUARANTINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getQuarantined() {
    return quarantined;
  }


  @JsonProperty(JSON_PROPERTY_QUARANTINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuarantined(Boolean quarantined) {
    this.quarantined = quarantined;
  }


  public TestCase name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TestCase methodName(String methodName) {
    this.methodName = methodName;
    return this;
  }

   /**
   * Get methodName
   * @return methodName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_METHOD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMethodName() {
    return methodName;
  }


  @JsonProperty(JSON_PROPERTY_METHOD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethodName(String methodName) {
    this.methodName = methodName;
  }


  public TestCase id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this TestCase object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCase testCase = (TestCase) o;
    return Objects.equals(this.successPercentage, testCase.successPercentage) &&
        Objects.equals(this.lastRanBuildNumber, testCase.lastRanBuildNumber) &&
        Objects.equals(this.quarantineStatistics, testCase.quarantineStatistics) &&
        Objects.equals(this.linkedJiraIssueKey, testCase.linkedJiraIssueKey) &&
        Objects.equals(this.testClass, testCase.testClass) &&
        Objects.equals(this.totalTestRuns, testCase.totalTestRuns) &&
        Objects.equals(this.numberOfSuccessRuns, testCase.numberOfSuccessRuns) &&
        Objects.equals(this.numberOfSkippedRuns, testCase.numberOfSkippedRuns) &&
        Objects.equals(this.numberOfFailedRuns, testCase.numberOfFailedRuns) &&
        Objects.equals(this.averageDuration, testCase.averageDuration) &&
        Objects.equals(this.averageDurationInSeconds, testCase.averageDurationInSeconds) &&
        Objects.equals(this.firstRanBuildNumber, testCase.firstRanBuildNumber) &&
        Objects.equals(this.quarantined, testCase.quarantined) &&
        Objects.equals(this.name, testCase.name) &&
        Objects.equals(this.methodName, testCase.methodName) &&
        Objects.equals(this.id, testCase.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(successPercentage, lastRanBuildNumber, quarantineStatistics, linkedJiraIssueKey, testClass, totalTestRuns, numberOfSuccessRuns, numberOfSkippedRuns, numberOfFailedRuns, averageDuration, averageDurationInSeconds, firstRanBuildNumber, quarantined, name, methodName, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCase {\n");
    sb.append("    successPercentage: ").append(toIndentedString(successPercentage)).append("\n");
    sb.append("    lastRanBuildNumber: ").append(toIndentedString(lastRanBuildNumber)).append("\n");
    sb.append("    quarantineStatistics: ").append(toIndentedString(quarantineStatistics)).append("\n");
    sb.append("    linkedJiraIssueKey: ").append(toIndentedString(linkedJiraIssueKey)).append("\n");
    sb.append("    testClass: ").append(toIndentedString(testClass)).append("\n");
    sb.append("    totalTestRuns: ").append(toIndentedString(totalTestRuns)).append("\n");
    sb.append("    numberOfSuccessRuns: ").append(toIndentedString(numberOfSuccessRuns)).append("\n");
    sb.append("    numberOfSkippedRuns: ").append(toIndentedString(numberOfSkippedRuns)).append("\n");
    sb.append("    numberOfFailedRuns: ").append(toIndentedString(numberOfFailedRuns)).append("\n");
    sb.append("    averageDuration: ").append(toIndentedString(averageDuration)).append("\n");
    sb.append("    averageDurationInSeconds: ").append(toIndentedString(averageDurationInSeconds)).append("\n");
    sb.append("    firstRanBuildNumber: ").append(toIndentedString(firstRanBuildNumber)).append("\n");
    sb.append("    quarantined: ").append(toIndentedString(quarantined)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    methodName: ").append(toIndentedString(methodName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

