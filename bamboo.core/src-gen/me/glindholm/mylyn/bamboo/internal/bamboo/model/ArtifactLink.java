/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.BuildResultsSummary;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.MutableArtifact;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.ResultsSummary;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ArtifactLink
 */
@JsonPropertyOrder({
  ArtifactLink.JSON_PROPERTY_LINK_TYPE,
  ArtifactLink.JSON_PROPERTY_SHARED_ARTIFACT,
  ArtifactLink.JSON_PROPERTY_ARTIFACT,
  ArtifactLink.JSON_PROPERTY_LABEL,
  ArtifactLink.JSON_PROPERTY_PRODUCER_JOB_RESULT,
  ArtifactLink.JSON_PROPERTY_BUILD_RESULTS_SUMMARY,
  ArtifactLink.JSON_PROPERTY_SIZE,
  ArtifactLink.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class ArtifactLink implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_LINK_TYPE = "linkType";
  private String linkType;

  public static final String JSON_PROPERTY_SHARED_ARTIFACT = "sharedArtifact";
  private Boolean sharedArtifact;

  public static final String JSON_PROPERTY_ARTIFACT = "artifact";
  private MutableArtifact artifact;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_PRODUCER_JOB_RESULT = "producerJobResult";
  private BuildResultsSummary producerJobResult;

  public static final String JSON_PROPERTY_BUILD_RESULTS_SUMMARY = "buildResultsSummary";
  private ResultsSummary buildResultsSummary;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Long size;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public ArtifactLink() { 
  }

  public ArtifactLink linkType(String linkType) {
    this.linkType = linkType;
    return this;
  }

   /**
   * Get linkType
   * @return linkType
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LINK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkType() {
    return linkType;
  }


  @JsonProperty(JSON_PROPERTY_LINK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkType(String linkType) {
    this.linkType = linkType;
  }


  public ArtifactLink sharedArtifact(Boolean sharedArtifact) {
    this.sharedArtifact = sharedArtifact;
    return this;
  }

   /**
   * Get sharedArtifact
   * @return sharedArtifact
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHARED_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSharedArtifact() {
    return sharedArtifact;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedArtifact(Boolean sharedArtifact) {
    this.sharedArtifact = sharedArtifact;
  }


  public ArtifactLink artifact(MutableArtifact artifact) {
    this.artifact = artifact;
    return this;
  }

   /**
   * Get artifact
   * @return artifact
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MutableArtifact getArtifact() {
    return artifact;
  }


  @JsonProperty(JSON_PROPERTY_ARTIFACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArtifact(MutableArtifact artifact) {
    this.artifact = artifact;
  }


  public ArtifactLink label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public ArtifactLink producerJobResult(BuildResultsSummary producerJobResult) {
    this.producerJobResult = producerJobResult;
    return this;
  }

   /**
   * Get producerJobResult
   * @return producerJobResult
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCER_JOB_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuildResultsSummary getProducerJobResult() {
    return producerJobResult;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCER_JOB_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProducerJobResult(BuildResultsSummary producerJobResult) {
    this.producerJobResult = producerJobResult;
  }


  public ArtifactLink buildResultsSummary(ResultsSummary buildResultsSummary) {
    this.buildResultsSummary = buildResultsSummary;
    return this;
  }

   /**
   * Get buildResultsSummary
   * @return buildResultsSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultsSummary getBuildResultsSummary() {
    return buildResultsSummary;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildResultsSummary(ResultsSummary buildResultsSummary) {
    this.buildResultsSummary = buildResultsSummary;
  }


  public ArtifactLink size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Long size) {
    this.size = size;
  }


  public ArtifactLink id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this ArtifactLink object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArtifactLink artifactLink = (ArtifactLink) o;
    return Objects.equals(this.linkType, artifactLink.linkType) &&
        Objects.equals(this.sharedArtifact, artifactLink.sharedArtifact) &&
        Objects.equals(this.artifact, artifactLink.artifact) &&
        Objects.equals(this.label, artifactLink.label) &&
        Objects.equals(this.producerJobResult, artifactLink.producerJobResult) &&
        Objects.equals(this.buildResultsSummary, artifactLink.buildResultsSummary) &&
        Objects.equals(this.size, artifactLink.size) &&
        Objects.equals(this.id, artifactLink.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkType, sharedArtifact, artifact, label, producerJobResult, buildResultsSummary, size, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArtifactLink {\n");
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    sharedArtifact: ").append(toIndentedString(sharedArtifact)).append("\n");
    sb.append("    artifact: ").append(toIndentedString(artifact)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    producerJobResult: ").append(toIndentedString(producerJobResult)).append("\n");
    sb.append("    buildResultsSummary: ").append(toIndentedString(buildResultsSummary)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

