/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestArtifactDefinition
 */
@JsonPropertyOrder({
  RestArtifactDefinition.JSON_PROPERTY_ID,
  RestArtifactDefinition.JSON_PROPERTY_NAME,
  RestArtifactDefinition.JSON_PROPERTY_LOCATION,
  RestArtifactDefinition.JSON_PROPERTY_COPY_PATTERNS,
  RestArtifactDefinition.JSON_PROPERTY_EXCLUSION_PATTERNS,
  RestArtifactDefinition.JSON_PROPERTY_SHARED,
  RestArtifactDefinition.JSON_PROPERTY_REQUIRED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestArtifactDefinition implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private String location;

  public static final String JSON_PROPERTY_COPY_PATTERNS = "copyPatterns";
  private List<String> copyPatterns;

  public static final String JSON_PROPERTY_EXCLUSION_PATTERNS = "exclusionPatterns";
  private List<String> exclusionPatterns;

  public static final String JSON_PROPERTY_SHARED = "shared";
  private Boolean shared;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  private Boolean required;

  public RestArtifactDefinition() { 
  }

  public RestArtifactDefinition id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public RestArtifactDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RestArtifactDefinition location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(String location) {
    this.location = location;
  }


  public RestArtifactDefinition copyPatterns(List<String> copyPatterns) {
    this.copyPatterns = copyPatterns;
    return this;
  }

  public RestArtifactDefinition addCopyPatternsItem(String copyPatternsItem) {
    if (this.copyPatterns == null) {
      this.copyPatterns = new ArrayList<>();
    }
    this.copyPatterns.add(copyPatternsItem);
    return this;
  }

   /**
   * Get copyPatterns
   * @return copyPatterns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COPY_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCopyPatterns() {
    return copyPatterns;
  }


  @JsonProperty(JSON_PROPERTY_COPY_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCopyPatterns(List<String> copyPatterns) {
    this.copyPatterns = copyPatterns;
  }


  public RestArtifactDefinition exclusionPatterns(List<String> exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
    return this;
  }

  public RestArtifactDefinition addExclusionPatternsItem(String exclusionPatternsItem) {
    if (this.exclusionPatterns == null) {
      this.exclusionPatterns = new ArrayList<>();
    }
    this.exclusionPatterns.add(exclusionPatternsItem);
    return this;
  }

   /**
   * Get exclusionPatterns
   * @return exclusionPatterns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXCLUSION_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExclusionPatterns() {
    return exclusionPatterns;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUSION_PATTERNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExclusionPatterns(List<String> exclusionPatterns) {
    this.exclusionPatterns = exclusionPatterns;
  }


  public RestArtifactDefinition shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHARED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShared() {
    return shared;
  }


  @JsonProperty(JSON_PROPERTY_SHARED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShared(Boolean shared) {
    this.shared = shared;
  }


  public RestArtifactDefinition required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequired(Boolean required) {
    this.required = required;
  }


  /**
   * Return true if this RestArtifactDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestArtifactDefinition restArtifactDefinition = (RestArtifactDefinition) o;
    return Objects.equals(this.id, restArtifactDefinition.id) &&
        Objects.equals(this.name, restArtifactDefinition.name) &&
        Objects.equals(this.location, restArtifactDefinition.location) &&
        Objects.equals(this.copyPatterns, restArtifactDefinition.copyPatterns) &&
        Objects.equals(this.exclusionPatterns, restArtifactDefinition.exclusionPatterns) &&
        Objects.equals(this.shared, restArtifactDefinition.shared) &&
        Objects.equals(this.required, restArtifactDefinition.required);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, location, copyPatterns, exclusionPatterns, shared, required);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestArtifactDefinition {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    copyPatterns: ").append(toIndentedString(copyPatterns)).append("\n");
    sb.append("    exclusionPatterns: ").append(toIndentedString(exclusionPatterns)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

