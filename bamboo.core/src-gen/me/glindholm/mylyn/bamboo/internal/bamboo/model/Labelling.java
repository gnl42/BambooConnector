/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.Label;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.Plan;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.Project;
import me.glindholm.mylyn.bamboo.internal.bamboo.model.ResultsSummary;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Labelling
 */
@JsonPropertyOrder({
  Labelling.JSON_PROPERTY_PLAN,
  Labelling.JSON_PROPERTY_LABEL,
  Labelling.JSON_PROPERTY_CREATION_DATE,
  Labelling.JSON_PROPERTY_PROJECT,
  Labelling.JSON_PROPERTY_USER_NAME,
  Labelling.JSON_PROPERTY_BUILD_RESULTS_SUMMARY,
  Labelling.JSON_PROPERTY_LAST_MODIFICATION_DATE,
  Labelling.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class Labelling implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PLAN = "plan";
  private Plan plan;

  public static final String JSON_PROPERTY_LABEL = "label";
  private Label label;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private Date creationDate;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private Project project;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_BUILD_RESULTS_SUMMARY = "buildResultsSummary";
  private ResultsSummary buildResultsSummary;

  public static final String JSON_PROPERTY_LAST_MODIFICATION_DATE = "lastModificationDate";
  private Date lastModificationDate;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public Labelling() { 
  }

  public Labelling plan(Plan plan) {
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Plan getPlan() {
    return plan;
  }


  @JsonProperty(JSON_PROPERTY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlan(Plan plan) {
    this.plan = plan;
  }


  public Labelling label(Label label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Label getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(Label label) {
    this.label = label;
  }


  public Labelling creationDate(Date creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }


  public Labelling project(Project project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Project getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(Project project) {
    this.project = project;
  }


  public Labelling userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public Labelling buildResultsSummary(ResultsSummary buildResultsSummary) {
    this.buildResultsSummary = buildResultsSummary;
    return this;
  }

   /**
   * Get buildResultsSummary
   * @return buildResultsSummary
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultsSummary getBuildResultsSummary() {
    return buildResultsSummary;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_RESULTS_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildResultsSummary(ResultsSummary buildResultsSummary) {
    this.buildResultsSummary = buildResultsSummary;
  }


  public Labelling lastModificationDate(Date lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
    return this;
  }

   /**
   * Get lastModificationDate
   * @return lastModificationDate
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LAST_MODIFICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getLastModificationDate() {
    return lastModificationDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MODIFICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastModificationDate(Date lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
  }


  public Labelling id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  /**
   * Return true if this Labelling object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Labelling labelling = (Labelling) o;
    return Objects.equals(this.plan, labelling.plan) &&
        Objects.equals(this.label, labelling.label) &&
        Objects.equals(this.creationDate, labelling.creationDate) &&
        Objects.equals(this.project, labelling.project) &&
        Objects.equals(this.userName, labelling.userName) &&
        Objects.equals(this.buildResultsSummary, labelling.buildResultsSummary) &&
        Objects.equals(this.lastModificationDate, labelling.lastModificationDate) &&
        Objects.equals(this.id, labelling.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plan, label, creationDate, project, userName, buildResultsSummary, lastModificationDate, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Labelling {\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    buildResultsSummary: ").append(toIndentedString(buildResultsSummary)).append("\n");
    sb.append("    lastModificationDate: ").append(toIndentedString(lastModificationDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

