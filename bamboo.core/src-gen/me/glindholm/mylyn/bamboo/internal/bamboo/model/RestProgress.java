/*
 * Bamboo
 * This is the reference document for the Atlassian Bamboo REST API. The REST API is for developers who want to:    - integrate Bamboo with other applications;   - create scripts that interact with Bamboo; or   - develop plugins that enhance the Bamboo UI, using REST to interact with the backend.    You can read more about developing Bamboo plugins in the [Bamboo Developer Documentation](https://developer.atlassian.com/bamboo/server/docs/latest/).
 *
 * The version of the OpenAPI document: 9.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.glindholm.mylyn.bamboo.internal.bamboo.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RestProgress
 */
@JsonPropertyOrder({
  RestProgress.JSON_PROPERTY_EXPAND,
  RestProgress.JSON_PROPERTY_PERCENTAGE_COMPLETED,
  RestProgress.JSON_PROPERTY_PERCENTAGE_COMPLETED_PRETTY,
  RestProgress.JSON_PROPERTY_PRETTY_TIME_REMAINING,
  RestProgress.JSON_PROPERTY_PRETTY_TIME_REMAINING_LONG,
  RestProgress.JSON_PROPERTY_AVERAGE_BUILD_DURATION,
  RestProgress.JSON_PROPERTY_PRETTY_AVERAGE_BUILD_DURATION,
  RestProgress.JSON_PROPERTY_BUILD_TIME,
  RestProgress.JSON_PROPERTY_PRETTY_BUILD_TIME,
  RestProgress.JSON_PROPERTY_STARTED_TIME,
  RestProgress.JSON_PROPERTY_STARTED_TIME_FORMATTED,
  RestProgress.JSON_PROPERTY_PRETTY_STARTED_TIME,
  RestProgress.JSON_PROPERTY_IS_VALID,
  RestProgress.JSON_PROPERTY_IS_UNDER_AVERAGE_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-08T20:39:31.812169500-07:00[America/Vancouver]")
public class RestProgress implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EXPAND = "expand";
  private String expand;

  public static final String JSON_PROPERTY_PERCENTAGE_COMPLETED = "percentageCompleted";
  private Double percentageCompleted;

  public static final String JSON_PROPERTY_PERCENTAGE_COMPLETED_PRETTY = "percentageCompletedPretty";
  private String percentageCompletedPretty;

  public static final String JSON_PROPERTY_PRETTY_TIME_REMAINING = "prettyTimeRemaining";
  private String prettyTimeRemaining;

  public static final String JSON_PROPERTY_PRETTY_TIME_REMAINING_LONG = "prettyTimeRemainingLong";
  private String prettyTimeRemainingLong;

  public static final String JSON_PROPERTY_AVERAGE_BUILD_DURATION = "averageBuildDuration";
  private Long averageBuildDuration;

  public static final String JSON_PROPERTY_PRETTY_AVERAGE_BUILD_DURATION = "prettyAverageBuildDuration";
  private String prettyAverageBuildDuration;

  public static final String JSON_PROPERTY_BUILD_TIME = "buildTime";
  private Long buildTime;

  public static final String JSON_PROPERTY_PRETTY_BUILD_TIME = "prettyBuildTime";
  private String prettyBuildTime;

  public static final String JSON_PROPERTY_STARTED_TIME = "startedTime";
  private String startedTime;

  public static final String JSON_PROPERTY_STARTED_TIME_FORMATTED = "startedTimeFormatted";
  private String startedTimeFormatted;

  public static final String JSON_PROPERTY_PRETTY_STARTED_TIME = "prettyStartedTime";
  private String prettyStartedTime;

  public static final String JSON_PROPERTY_IS_VALID = "isValid";
  private Boolean isValid;

  public static final String JSON_PROPERTY_IS_UNDER_AVERAGE_TIME = "isUnderAverageTime";
  private Boolean isUnderAverageTime;

  public RestProgress() { 
  }

  public RestProgress expand(String expand) {
    this.expand = expand;
    return this;
  }

   /**
   * Get expand
   * @return expand
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpand() {
    return expand;
  }


  @JsonProperty(JSON_PROPERTY_EXPAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpand(String expand) {
    this.expand = expand;
  }


  public RestProgress percentageCompleted(Double percentageCompleted) {
    this.percentageCompleted = percentageCompleted;
    return this;
  }

   /**
   * Get percentageCompleted
   * @return percentageCompleted
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPercentageCompleted() {
    return percentageCompleted;
  }


  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentageCompleted(Double percentageCompleted) {
    this.percentageCompleted = percentageCompleted;
  }


  public RestProgress percentageCompletedPretty(String percentageCompletedPretty) {
    this.percentageCompletedPretty = percentageCompletedPretty;
    return this;
  }

   /**
   * Get percentageCompletedPretty
   * @return percentageCompletedPretty
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETED_PRETTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPercentageCompletedPretty() {
    return percentageCompletedPretty;
  }


  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETED_PRETTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentageCompletedPretty(String percentageCompletedPretty) {
    this.percentageCompletedPretty = percentageCompletedPretty;
  }


  public RestProgress prettyTimeRemaining(String prettyTimeRemaining) {
    this.prettyTimeRemaining = prettyTimeRemaining;
    return this;
  }

   /**
   * Get prettyTimeRemaining
   * @return prettyTimeRemaining
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_TIME_REMAINING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyTimeRemaining() {
    return prettyTimeRemaining;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_TIME_REMAINING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyTimeRemaining(String prettyTimeRemaining) {
    this.prettyTimeRemaining = prettyTimeRemaining;
  }


  public RestProgress prettyTimeRemainingLong(String prettyTimeRemainingLong) {
    this.prettyTimeRemainingLong = prettyTimeRemainingLong;
    return this;
  }

   /**
   * Get prettyTimeRemainingLong
   * @return prettyTimeRemainingLong
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_TIME_REMAINING_LONG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyTimeRemainingLong() {
    return prettyTimeRemainingLong;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_TIME_REMAINING_LONG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyTimeRemainingLong(String prettyTimeRemainingLong) {
    this.prettyTimeRemainingLong = prettyTimeRemainingLong;
  }


  public RestProgress averageBuildDuration(Long averageBuildDuration) {
    this.averageBuildDuration = averageBuildDuration;
    return this;
  }

   /**
   * Get averageBuildDuration
   * @return averageBuildDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AVERAGE_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAverageBuildDuration() {
    return averageBuildDuration;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageBuildDuration(Long averageBuildDuration) {
    this.averageBuildDuration = averageBuildDuration;
  }


  public RestProgress prettyAverageBuildDuration(String prettyAverageBuildDuration) {
    this.prettyAverageBuildDuration = prettyAverageBuildDuration;
    return this;
  }

   /**
   * Get prettyAverageBuildDuration
   * @return prettyAverageBuildDuration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_AVERAGE_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyAverageBuildDuration() {
    return prettyAverageBuildDuration;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_AVERAGE_BUILD_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyAverageBuildDuration(String prettyAverageBuildDuration) {
    this.prettyAverageBuildDuration = prettyAverageBuildDuration;
  }


  public RestProgress buildTime(Long buildTime) {
    this.buildTime = buildTime;
    return this;
  }

   /**
   * Get buildTime
   * @return buildTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BUILD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getBuildTime() {
    return buildTime;
  }


  @JsonProperty(JSON_PROPERTY_BUILD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuildTime(Long buildTime) {
    this.buildTime = buildTime;
  }


  public RestProgress prettyBuildTime(String prettyBuildTime) {
    this.prettyBuildTime = prettyBuildTime;
    return this;
  }

   /**
   * Get prettyBuildTime
   * @return prettyBuildTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyBuildTime() {
    return prettyBuildTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_BUILD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyBuildTime(String prettyBuildTime) {
    this.prettyBuildTime = prettyBuildTime;
  }


  public RestProgress startedTime(String startedTime) {
    this.startedTime = startedTime;
    return this;
  }

   /**
   * Get startedTime
   * @return startedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartedTime() {
    return startedTime;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedTime(String startedTime) {
    this.startedTime = startedTime;
  }


  public RestProgress startedTimeFormatted(String startedTimeFormatted) {
    this.startedTimeFormatted = startedTimeFormatted;
    return this;
  }

   /**
   * Get startedTimeFormatted
   * @return startedTimeFormatted
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STARTED_TIME_FORMATTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartedTimeFormatted() {
    return startedTimeFormatted;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_TIME_FORMATTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedTimeFormatted(String startedTimeFormatted) {
    this.startedTimeFormatted = startedTimeFormatted;
  }


  public RestProgress prettyStartedTime(String prettyStartedTime) {
    this.prettyStartedTime = prettyStartedTime;
    return this;
  }

   /**
   * Get prettyStartedTime
   * @return prettyStartedTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRETTY_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrettyStartedTime() {
    return prettyStartedTime;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_STARTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyStartedTime(String prettyStartedTime) {
    this.prettyStartedTime = prettyStartedTime;
  }


  public RestProgress isValid(Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

   /**
   * Get isValid
   * @return isValid
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsValid() {
    return isValid;
  }


  @JsonProperty(JSON_PROPERTY_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }


  public RestProgress isUnderAverageTime(Boolean isUnderAverageTime) {
    this.isUnderAverageTime = isUnderAverageTime;
    return this;
  }

   /**
   * Get isUnderAverageTime
   * @return isUnderAverageTime
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IS_UNDER_AVERAGE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsUnderAverageTime() {
    return isUnderAverageTime;
  }


  @JsonProperty(JSON_PROPERTY_IS_UNDER_AVERAGE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsUnderAverageTime(Boolean isUnderAverageTime) {
    this.isUnderAverageTime = isUnderAverageTime;
  }


  /**
   * Return true if this RestProgress object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestProgress restProgress = (RestProgress) o;
    return Objects.equals(this.expand, restProgress.expand) &&
        Objects.equals(this.percentageCompleted, restProgress.percentageCompleted) &&
        Objects.equals(this.percentageCompletedPretty, restProgress.percentageCompletedPretty) &&
        Objects.equals(this.prettyTimeRemaining, restProgress.prettyTimeRemaining) &&
        Objects.equals(this.prettyTimeRemainingLong, restProgress.prettyTimeRemainingLong) &&
        Objects.equals(this.averageBuildDuration, restProgress.averageBuildDuration) &&
        Objects.equals(this.prettyAverageBuildDuration, restProgress.prettyAverageBuildDuration) &&
        Objects.equals(this.buildTime, restProgress.buildTime) &&
        Objects.equals(this.prettyBuildTime, restProgress.prettyBuildTime) &&
        Objects.equals(this.startedTime, restProgress.startedTime) &&
        Objects.equals(this.startedTimeFormatted, restProgress.startedTimeFormatted) &&
        Objects.equals(this.prettyStartedTime, restProgress.prettyStartedTime) &&
        Objects.equals(this.isValid, restProgress.isValid) &&
        Objects.equals(this.isUnderAverageTime, restProgress.isUnderAverageTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expand, percentageCompleted, percentageCompletedPretty, prettyTimeRemaining, prettyTimeRemainingLong, averageBuildDuration, prettyAverageBuildDuration, buildTime, prettyBuildTime, startedTime, startedTimeFormatted, prettyStartedTime, isValid, isUnderAverageTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestProgress {\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    percentageCompleted: ").append(toIndentedString(percentageCompleted)).append("\n");
    sb.append("    percentageCompletedPretty: ").append(toIndentedString(percentageCompletedPretty)).append("\n");
    sb.append("    prettyTimeRemaining: ").append(toIndentedString(prettyTimeRemaining)).append("\n");
    sb.append("    prettyTimeRemainingLong: ").append(toIndentedString(prettyTimeRemainingLong)).append("\n");
    sb.append("    averageBuildDuration: ").append(toIndentedString(averageBuildDuration)).append("\n");
    sb.append("    prettyAverageBuildDuration: ").append(toIndentedString(prettyAverageBuildDuration)).append("\n");
    sb.append("    buildTime: ").append(toIndentedString(buildTime)).append("\n");
    sb.append("    prettyBuildTime: ").append(toIndentedString(prettyBuildTime)).append("\n");
    sb.append("    startedTime: ").append(toIndentedString(startedTime)).append("\n");
    sb.append("    startedTimeFormatted: ").append(toIndentedString(startedTimeFormatted)).append("\n");
    sb.append("    prettyStartedTime: ").append(toIndentedString(prettyStartedTime)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    isUnderAverageTime: ").append(toIndentedString(isUnderAverageTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

